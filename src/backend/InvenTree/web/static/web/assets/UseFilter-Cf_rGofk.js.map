{"version":3,"file":"UseFilter-Cf_rGofk.js","sources":["../../../../../../frontend/src/hooks/UseFilter.tsx"],"sourcesContent":["/*\n * Custom hook for retrieving a list of items from the API,\n * and turning them into \"filters\" for use in the frontend table framework.\n */\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\n\nimport { resolveItem } from '@lib/functions/Conversion';\nimport type { TableFilterChoice } from '@lib/types/Filters';\nimport { useApi } from '../contexts/ApiContext';\n\ntype UseFilterProps = {\n  url: string;\n  method?: 'GET' | 'POST' | 'OPTIONS';\n  params?: any;\n  accessor?: string;\n  transform: (item: any) => TableFilterChoice;\n};\n\nexport function useFilters(props: UseFilterProps) {\n  const api = useApi();\n\n  const query = useQuery({\n    enabled: true,\n    gcTime: 500,\n    queryKey: [props.url, props.method, props.params],\n    queryFn: async () => {\n      return await api\n        .request({\n          url: props.url,\n          method: props.method ?? 'GET',\n          params: props.params\n        })\n        .then((response) => {\n          const data = resolveItem(response, props.accessor ?? 'data');\n\n          if (data == null || data == undefined) {\n            return [];\n          }\n\n          return data;\n        });\n    }\n  });\n\n  const choices: TableFilterChoice[] = useMemo(() => {\n    const opts = query.data?.map(props.transform) ?? [];\n\n    // Ensure stringiness\n    return opts.map((opt: any) => {\n      return {\n        value: opt.value.toString(),\n        label: opt?.label?.toString() ?? opt.value.toString()\n      };\n    });\n  }, [props.transform, query.data]);\n\n  const refresh = useCallback(() => {\n    query.refetch();\n  }, []);\n\n  return {\n    choices,\n    refresh\n  };\n}\n"],"names":["useFilters","props","api","useApi","query","useQuery","enabled","gcTime","queryKey","url","method","params","queryFn","request","then","response","data","resolveItem","accessor","undefined","choices","useMemo","opts","map","transform","opt","value","toString","label","refresh","useCallback","refetch"],"mappings":"0IAmBO,SAASA,EAAWC,EAAuB,CAChD,MAAMC,EAAMC,EAAO,EAEbC,EAAQC,EAAS,CACrBC,QAAS,GACTC,OAAQ,IACRC,SAAU,CAACP,EAAMQ,IAAKR,EAAMS,OAAQT,EAAMU,MAAM,EAChDC,QAAS,SACA,MAAMV,EACVW,QAAQ,CACPJ,IAAKR,EAAMQ,IACXC,OAAQT,EAAMS,QAAU,MACxBC,OAAQV,EAAMU,MAAAA,CACf,EACAG,KAAmBC,GAAA,CAClB,MAAMC,EAAOC,EAAYF,EAAUd,EAAMiB,UAAY,MAAM,EAEvDF,OAAAA,GAAQ,MAAQA,GAAQG,KACnB,CAAE,EAGJH,CAAAA,CACR,CACL,CACD,EAEKI,EAA+BC,EAAAA,QAAQ,IAAM,OAI1CC,SAHMlB,EAAAA,EAAMY,OAANZ,YAAAA,EAAYmB,IAAItB,EAAMuB,aAAc,CAAE,GAGvCD,IAAKE,GAAa,OACrB,MAAA,CACLC,MAAOD,EAAIC,MAAMC,SAAS,EAC1BC,QAAOH,EAAAA,GAAAA,YAAAA,EAAKG,QAALH,YAAAA,EAAYE,aAAcF,EAAIC,MAAMC,SAAS,CACtD,CAAA,CACD,GACA,CAAC1B,EAAMuB,UAAWpB,EAAMY,IAAI,CAAC,EAE1Ba,EAAUC,EAAAA,YAAY,IAAM,CAChC1B,EAAM2B,QAAQ,CAChB,EAAG,EAAE,EAEE,MAAA,CACLX,QAAAA,EACAS,QAAAA,CACF,CACF"}
