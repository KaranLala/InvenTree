{"version":3,"file":"ExtraLineItemTable-D78MeQx9.js","sources":["../../../../../../frontend/src/tables/general/ExtraLineItemTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowDuplicateAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport type { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport type { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { formatCurrency } from '../../defaults/formatters';\nimport { extraLineItemFields } from '../../forms/CommonForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport {\n  DecimalColumn,\n  DescriptionColumn,\n  LinkColumn,\n  NoteColumn\n} from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function ExtraLineItemTable({\n  endpoint,\n  orderId,\n  orderDetailRefresh,\n  currency,\n  role\n}: Readonly<{\n  endpoint: ApiEndpoints;\n  orderId: number;\n  orderDetailRefresh: () => void;\n  currency: string;\n  role: UserRoles;\n}>) {\n  const table = useTable('extra-line-item');\n  const user = useUserState();\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'reference',\n        switchable: false\n      },\n      DescriptionColumn({}),\n      DecimalColumn({\n        accessor: 'quantity',\n        switchable: false\n      }),\n      {\n        accessor: 'price',\n        title: t`Unit Price`,\n        render: (record: any) =>\n          formatCurrency(record.price, {\n            currency: record.price_currency\n          })\n      },\n      {\n        accessor: 'total_price',\n        title: t`Total Price`,\n        render: (record: any) =>\n          formatCurrency(record.price, {\n            currency: record.price_currency,\n            multiplier: record.quantity\n          })\n      },\n      NoteColumn({\n        accessor: 'notes'\n      }),\n      LinkColumn({\n        accessor: 'link'\n      })\n    ];\n  }, []);\n\n  const [initialData, setInitialData] = useState<any>({});\n\n  const [selectedLine, setSelectedLine] = useState<number>(0);\n\n  const newLineItem = useCreateApiFormModal({\n    url: endpoint,\n    title: t`Add Line Item`,\n    fields: extraLineItemFields(),\n    initialData: {\n      ...initialData,\n      price_currency: currency\n    },\n    onFormSuccess: orderDetailRefresh,\n    table: table\n  });\n\n  const editLineItem = useEditApiFormModal({\n    url: endpoint,\n    pk: selectedLine,\n    title: t`Edit Line Item`,\n    fields: extraLineItemFields(),\n    onFormSuccess: orderDetailRefresh,\n    table: table\n  });\n\n  const deleteLineItem = useDeleteApiFormModal({\n    url: endpoint,\n    pk: selectedLine,\n    title: t`Delete Line Item`,\n    onFormSuccess: orderDetailRefresh,\n    table: table\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(role),\n          onClick: () => {\n            setSelectedLine(record.pk);\n            editLineItem.open();\n          }\n        }),\n        RowDuplicateAction({\n          hidden: !user.hasAddRole(role),\n          onClick: () => {\n            setInitialData({ ...record });\n            newLineItem.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(role),\n          onClick: () => {\n            setSelectedLine(record.pk);\n            deleteLineItem.open();\n          }\n        })\n      ];\n    },\n    [user, role]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-line-item'\n        tooltip={t`Add Extra Line Item`}\n        hidden={!user.hasAddRole(role)}\n        onClick={() => {\n          setInitialData({\n            order: orderId\n          });\n          newLineItem.open();\n        }}\n      />\n    ];\n  }, [user, role]);\n\n  return (\n    <>\n      {newLineItem.modal}\n      {editLineItem.modal}\n      {deleteLineItem.modal}\n      <InvenTreeTable\n        tableState={table}\n        url={apiUrl(endpoint)}\n        columns={tableColumns}\n        props={{\n          params: {\n            order: orderId\n          },\n          rowActions: rowActions,\n          tableActions: tableActions\n        }}\n      />\n    </>\n  );\n}\n"],"names":["ExtraLineItemTable","endpoint","orderId","orderDetailRefresh","currency","role","table","useTable","user","useUserState","tableColumns","useMemo","accessor","switchable","DescriptionColumn","DecimalColumn","title","_i18n","_","id","render","record","formatCurrency","price","price_currency","multiplier","quantity","NoteColumn","LinkColumn","initialData","setInitialData","useState","selectedLine","setSelectedLine","newLineItem","useCreateApiFormModal","url","fields","extraLineItemFields","onFormSuccess","editLineItem","useEditApiFormModal","pk","deleteLineItem","useDeleteApiFormModal","rowActions","useCallback","RowEditAction","hidden","hasChangeRole","onClick","open","RowDuplicateAction","hasAddRole","RowDeleteAction","hasDeleteRole","tableActions","jsx","AddItemButton","order","modal","InvenTreeTable","apiUrl","params"],"mappings":"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"}
