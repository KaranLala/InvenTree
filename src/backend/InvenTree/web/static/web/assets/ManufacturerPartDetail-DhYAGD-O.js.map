{"version":3,"file":"ManufacturerPartDetail-DhYAGD-O.js","sources":["../../../../../../frontend/src/tables/purchasing/ManufacturerPartParameterTable.tsx","../../../../../../frontend/src/pages/company/ManufacturerPartDetail.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { useManufacturerPartParameterFields } from '../../forms/CompanyForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function ManufacturerPartParameterTable({\n  params\n}: Readonly<{\n  params: any;\n}>) {\n  const table = useTable('manufacturer-part-parameter');\n  const user = useUserState();\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        title: t`Name`,\n        sortable: true,\n        switchable: false\n      },\n      {\n        accessor: 'value',\n        title: t`Value`,\n        sortable: true,\n        switchable: false\n      },\n      {\n        accessor: 'units',\n        title: t`Units`,\n        sortable: false,\n        switchable: true\n      }\n    ];\n  }, []);\n\n  const fields = useManufacturerPartParameterFields();\n\n  const [selectedParameter, setSelectedParameter] = useState<\n    number | undefined\n  >(undefined);\n\n  const createParameter = useCreateApiFormModal({\n    url: ApiEndpoints.manufacturer_part_parameter_list,\n    title: t`Add Parameter`,\n    fields: fields,\n    table: table,\n    initialData: {\n      manufacturer_part: params.manufacturer_part\n    }\n  });\n\n  const editParameter = useEditApiFormModal({\n    url: ApiEndpoints.manufacturer_part_parameter_list,\n    pk: selectedParameter,\n    title: t`Edit Parameter`,\n    fields: fields,\n    table: table\n  });\n\n  const deleteParameter = useDeleteApiFormModal({\n    url: ApiEndpoints.manufacturer_part_parameter_list,\n    pk: selectedParameter,\n    title: t`Delete Parameter`,\n    table: table\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedParameter(record.pk);\n            editParameter.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedParameter(record.pk);\n            deleteParameter.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-parameter'\n        tooltip={t`Add Parameter`}\n        onClick={() => {\n          createParameter.open();\n        }}\n        hidden={!user.hasAddRole(UserRoles.purchase_order)}\n      />\n    ];\n  }, [user]);\n\n  return (\n    <>\n      {createParameter.modal}\n      {editParameter.modal}\n      {deleteParameter.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.manufacturer_part_parameter_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          params: {\n            ...params\n          },\n          rowActions: rowActions,\n          tableActions: tableActions\n        }}\n      />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Grid, Skeleton, Stack } from '@mantine/core';\nimport {\n  IconBuildingWarehouse,\n  IconInfoCircle,\n  IconList\n} from '@tabler/icons-react';\nimport { useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getDetailUrl } from '@lib/functions/Navigation';\nimport AdminButton from '../../components/buttons/AdminButton';\nimport {\n  type DetailsField,\n  DetailsTable\n} from '../../components/details/Details';\nimport { DetailsImage } from '../../components/details/DetailsImage';\nimport { ItemDetailsGrid } from '../../components/details/ItemDetails';\nimport {\n  DeleteItemAction,\n  DuplicateItemAction,\n  EditItemAction,\n  OptionsActionDropdown\n} from '../../components/items/ActionDropdown';\nimport InstanceDetail from '../../components/nav/InstanceDetail';\nimport { PageDetail } from '../../components/nav/PageDetail';\nimport AttachmentPanel from '../../components/panels/AttachmentPanel';\nimport NotesPanel from '../../components/panels/NotesPanel';\nimport type { PanelType } from '../../components/panels/Panel';\nimport { PanelGroup } from '../../components/panels/PanelGroup';\nimport { useManufacturerPartFields } from '../../forms/CompanyForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useInstance } from '../../hooks/UseInstance';\nimport { useUserState } from '../../states/UserState';\nimport ManufacturerPartParameterTable from '../../tables/purchasing/ManufacturerPartParameterTable';\nimport { SupplierPartTable } from '../../tables/purchasing/SupplierPartTable';\n\nexport default function ManufacturerPartDetail() {\n  const { id } = useParams();\n  const user = useUserState();\n  const navigate = useNavigate();\n\n  const {\n    instance: manufacturerPart,\n    instanceQuery,\n    refreshInstance\n  } = useInstance({\n    endpoint: ApiEndpoints.manufacturer_part_list,\n    pk: id,\n    hasPrimaryKey: true,\n    params: {\n      part_detail: true,\n      manufacturer_detail: true\n    }\n  });\n\n  const detailsPanel = useMemo(() => {\n    if (instanceQuery.isFetching) {\n      return <Skeleton />;\n    }\n\n    const data = manufacturerPart ?? {};\n\n    const tl: DetailsField[] = [\n      {\n        type: 'link',\n        name: 'part',\n        label: t`Internal Part`,\n        model: ModelType.part,\n        hidden: !manufacturerPart.part\n      },\n      {\n        type: 'string',\n        name: 'part_detail.IPN',\n        label: t`IPN`,\n        copy: true,\n        icon: 'serial',\n        hidden: !data.part_detail?.IPN\n      },\n      {\n        type: 'string',\n        name: 'part_detail.description',\n        label: t`Description`,\n        copy: true,\n        icon: 'info',\n        hidden: !manufacturerPart.description\n      }\n    ];\n\n    const tr: DetailsField[] = [\n      {\n        type: 'link',\n        name: 'manufacturer',\n        label: t`Manufacturer`,\n        icon: 'manufacturers',\n        model: ModelType.company,\n        hidden: !manufacturerPart.manufacturer\n      },\n      {\n        type: 'string',\n        name: 'MPN',\n        label: t`Manufacturer Part Number`,\n        copy: true,\n        hidden: !manufacturerPart.MPN,\n        icon: 'reference'\n      },\n      {\n        type: 'string',\n        name: 'description',\n        label: t`Description`,\n        copy: true,\n        hidden: !manufacturerPart.description,\n        icon: 'info'\n      },\n      {\n        type: 'link',\n        external: true,\n        name: 'link',\n        label: t`External Link`,\n        copy: true,\n        hidden: !manufacturerPart.link\n      }\n    ];\n\n    return (\n      <ItemDetailsGrid>\n        <Grid grow>\n          <DetailsImage\n            appRole={UserRoles.part}\n            src={manufacturerPart?.part_detail?.image}\n            apiPath={apiUrl(\n              ApiEndpoints.part_list,\n              manufacturerPart?.part_detail?.pk\n            )}\n            pk={manufacturerPart?.part_detail?.pk}\n          />\n          <Grid.Col span={{ base: 12, sm: 8 }}>\n            <DetailsTable title={t`Part Details`} fields={tl} item={data} />\n          </Grid.Col>\n        </Grid>\n        <DetailsTable title={t`Manufacturer Details`} fields={tr} item={data} />\n      </ItemDetailsGrid>\n    );\n  }, [manufacturerPart, instanceQuery]);\n\n  const panels: PanelType[] = useMemo(() => {\n    return [\n      {\n        name: 'details',\n        label: t`Manufacturer Part Details`,\n        icon: <IconInfoCircle />,\n        content: detailsPanel\n      },\n      {\n        name: 'parameters',\n        label: t`Parameters`,\n        icon: <IconList />,\n        content: manufacturerPart?.pk ? (\n          <ManufacturerPartParameterTable\n            params={{ manufacturer_part: manufacturerPart.pk }}\n          />\n        ) : (\n          <Skeleton />\n        )\n      },\n      {\n        name: 'suppliers',\n        label: t`Suppliers`,\n        icon: <IconBuildingWarehouse />,\n        content: manufacturerPart?.pk ? (\n          <SupplierPartTable\n            params={{\n              manufacturer_part: manufacturerPart.pk\n            }}\n          />\n        ) : (\n          <Skeleton />\n        )\n      },\n      AttachmentPanel({\n        model_type: ModelType.manufacturerpart,\n        model_id: manufacturerPart?.pk\n      }),\n      NotesPanel({\n        model_type: ModelType.manufacturerpart,\n        model_id: manufacturerPart?.pk\n      })\n    ];\n  }, [manufacturerPart]);\n\n  const editManufacturerPartFields = useManufacturerPartFields();\n\n  const editManufacturerPart = useEditApiFormModal({\n    url: ApiEndpoints.manufacturer_part_list,\n    pk: manufacturerPart?.pk,\n    title: t`Edit Manufacturer Part`,\n    fields: editManufacturerPartFields,\n    onFormSuccess: refreshInstance\n  });\n\n  const duplicateManufacturerPart = useCreateApiFormModal({\n    url: ApiEndpoints.manufacturer_part_list,\n    title: t`Add Manufacturer Part`,\n    fields: editManufacturerPartFields,\n    initialData: {\n      ...manufacturerPart\n    },\n    follow: true,\n    modelType: ModelType.manufacturerpart\n  });\n\n  const deleteManufacturerPart = useDeleteApiFormModal({\n    url: ApiEndpoints.manufacturer_part_list,\n    pk: manufacturerPart?.pk,\n    title: t`Delete Manufacturer Part`,\n    onFormSuccess: () => {\n      navigate(getDetailUrl(ModelType.part, manufacturerPart.part));\n    }\n  });\n\n  const manufacturerPartActions = useMemo(() => {\n    return [\n      <AdminButton\n        key='admin'\n        model={ModelType.manufacturerpart}\n        id={manufacturerPart.pk}\n      />,\n      <OptionsActionDropdown\n        key='options'\n        tooltip={t`Manufacturer Part Actions`}\n        actions={[\n          DuplicateItemAction({\n            hidden: !user.hasAddRole(UserRoles.purchase_order),\n            onClick: () => duplicateManufacturerPart.open()\n          }),\n          EditItemAction({\n            hidden: !user.hasChangeRole(UserRoles.purchase_order),\n            onClick: () => editManufacturerPart.open()\n          }),\n          DeleteItemAction({\n            hidden: !user.hasDeleteRole(UserRoles.purchase_order),\n            onClick: () => deleteManufacturerPart.open()\n          })\n        ]}\n      />\n    ];\n  }, [user, manufacturerPart]);\n\n  const breadcrumbs = useMemo(() => {\n    return [\n      {\n        name: t`Purchasing`,\n        url: '/purchasing/'\n      },\n      {\n        name: manufacturerPart?.manufacturer_detail?.name ?? t`Manufacturer`,\n        url: `/purchasing/manufacturer/${manufacturerPart?.manufacturer_detail?.pk}/`\n      }\n    ];\n  }, [manufacturerPart]);\n\n  return (\n    <>\n      {deleteManufacturerPart.modal}\n      {duplicateManufacturerPart.modal}\n      {editManufacturerPart.modal}\n      <InstanceDetail\n        query={instanceQuery}\n        requiredPermission={ModelType.manufacturerpart}\n      >\n        <Stack gap='xs'>\n          <PageDetail\n            title={t`ManufacturerPart`}\n            subtitle={`${manufacturerPart.MPN} - ${manufacturerPart.part_detail?.name}`}\n            breadcrumbs={breadcrumbs}\n            lastCrumb={[\n              {\n                name: manufacturerPart.MPN,\n                url: getDetailUrl(\n                  ModelType.manufacturerpart,\n                  manufacturerPart.pk\n                )\n              }\n            ]}\n            actions={manufacturerPartActions}\n            imageUrl={manufacturerPart?.part_detail?.thumbnail}\n            editAction={editManufacturerPart.open}\n            editEnabled={user.hasChangePermission(ModelType.manufacturerpart)}\n          />\n          <PanelGroup\n            pageKey='manufacturerpart'\n            panels={panels}\n            instance={manufacturerPart}\n            reloadInstance={refreshInstance}\n            model={ModelType.manufacturerpart}\n            id={manufacturerPart.pk}\n          />\n        </Stack>\n      </InstanceDetail>\n    </>\n  );\n}\n"],"names":["ManufacturerPartParameterTable","params","table","useTable","user","useUserState","tableColumns","useMemo","accessor","title","_i18n","_","id","sortable","switchable","fields","useManufacturerPartParameterFields","selectedParameter","setSelectedParameter","useState","undefined","createParameter","useCreateApiFormModal","url","ApiEndpoints","manufacturer_part_parameter_list","initialData","manufacturer_part","editParameter","useEditApiFormModal","pk","deleteParameter","useDeleteApiFormModal","rowActions","useCallback","record","RowEditAction","hidden","hasChangeRole","UserRoles","purchase_order","onClick","open","RowDeleteAction","hasDeleteRole","tableActions","jsx","AddItemButton","hasAddRole","modal","InvenTreeTable","apiUrl","ManufacturerPartDetail","useParams","navigate","useNavigate","instance","manufacturerPart","instanceQuery","refreshInstance","useInstance","endpoint","manufacturer_part_list","hasPrimaryKey","part_detail","manufacturer_detail","detailsPanel","isFetching","Skeleton","data","tl","type","name","label","model","ModelType","part","copy","icon","IPN","description","tr","company","manufacturer","MPN","external","link","ItemDetailsGrid","jsxs","Grid","DetailsImage","image","part_list","base","sm","DetailsTable","panels","IconInfoCircle","content","IconList","IconBuildingWarehouse","SupplierPartTable","AttachmentPanel","model_type","manufacturerpart","model_id","NotesPanel","editManufacturerPartFields","useManufacturerPartFields","editManufacturerPart","onFormSuccess","duplicateManufacturerPart","follow","modelType","deleteManufacturerPart","getDetailUrl","manufacturerPartActions","AdminButton","OptionsActionDropdown","DuplicateItemAction","EditItemAction","DeleteItemAction","breadcrumbs","InstanceDetail","Stack","PageDetail","thumbnail","hasChangePermission","PanelGroup"],"mappings":"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"}
