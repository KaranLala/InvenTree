{"version":3,"file":"UnitManagementPanel-Cu4ztX-t.js","sources":["../../../../../../frontend/src/tables/settings/CustomUnitsTable.tsx","../../../../../../frontend/src/pages/Index/Settings/AdminCenter/UnitManagementPanel.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { customUnitsFields } from '../../forms/CommonForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Table for displaying list of custom physical units\n */\nexport default function CustomUnitsTable() {\n  const table = useTable('custom-units');\n\n  const user = useUserState();\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        switchable: false,\n        sortable: true\n      },\n      {\n        accessor: 'definition',\n        switchable: false,\n        sortable: false\n      },\n      {\n        accessor: 'symbol',\n        switchable: false,\n        sortable: true\n      }\n    ];\n  }, []);\n\n  const newUnit = useCreateApiFormModal({\n    url: ApiEndpoints.custom_unit_list,\n    title: t`Add Custom Unit`,\n    fields: customUnitsFields(),\n    table: table\n  });\n\n  const [selectedUnit, setSelectedUnit] = useState<number>(-1);\n\n  const editUnit = useEditApiFormModal({\n    url: ApiEndpoints.custom_unit_list,\n    pk: selectedUnit,\n    title: t`Edit Custom Unit`,\n    fields: customUnitsFields(),\n    onFormSuccess: (record: any) => table.updateRecord(record)\n  });\n\n  const deleteUnit = useDeleteApiFormModal({\n    url: ApiEndpoints.custom_unit_list,\n    pk: selectedUnit,\n    title: t`Delete Custom Unit`,\n    table: table\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedUnit(record.pk);\n            editUnit.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedUnit(record.pk);\n            deleteUnit.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    const actions = [];\n\n    actions.push(\n      <AddItemButton\n        tooltip={t`Add custom unit`}\n        onClick={() => newUnit.open()}\n        hidden={!user.isStaff() || !user.hasChangeRole(UserRoles.admin)}\n      />\n    );\n\n    return actions;\n  }, [user]);\n\n  return (\n    <>\n      {newUnit.modal}\n      {editUnit.modal}\n      {deleteUnit.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.custom_unit_list)}\n        tableState={table}\n        columns={columns}\n        props={{\n          rowActions: rowActions,\n          tableActions: tableActions,\n          enableDownload: true\n        }}\n      />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Accordion, Stack } from '@mantine/core';\nimport { useMemo } from 'react';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { StylishText } from '../../../../components/items/StylishText';\nimport { useTable } from '../../../../hooks/UseTable';\nimport { BooleanColumn } from '../../../../tables/ColumnRenderers';\nimport { InvenTreeTable } from '../../../../tables/InvenTreeTable';\nimport CustomUnitsTable from '../../../../tables/settings/CustomUnitsTable';\n\nfunction AllUnitTable() {\n  const table = useTable('all-units', 'name');\n  const columns = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        title: t`Name`\n      },\n      BooleanColumn({ accessor: 'is_alias', title: t`Alias` }),\n      BooleanColumn({ accessor: 'isdimensionless', title: t`Dimensionless` })\n    ];\n  }, []);\n\n  return (\n    <InvenTreeTable\n      url={apiUrl(ApiEndpoints.all_units)}\n      tableState={table}\n      columns={columns}\n      props={{\n        enableSearch: false,\n        enablePagination: false,\n        enableColumnSwitching: false,\n        dataFormatter: (data: any) => {\n          const units = data.available_units ?? {};\n          return Object.entries(units).map(([key, values]: [string, any]) => {\n            return {\n              name: values.name,\n              is_alias: values.is_alias,\n              compatible_units: values.compatible_units,\n              isdimensionless: values.isdimensionless\n            };\n          });\n        }\n      }}\n    />\n  );\n}\n\nexport default function UnitManagementPanel() {\n  return (\n    <Stack gap='xs'>\n      <Accordion defaultValue='custom'>\n        <Accordion.Item value='custom' key='custom'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`Custom Units`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <CustomUnitsTable />\n          </Accordion.Panel>\n        </Accordion.Item>\n        <Accordion.Item value='all' key='all'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`All units`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <AllUnitTable />\n          </Accordion.Panel>\n        </Accordion.Item>\n      </Accordion>\n    </Stack>\n  );\n}\n"],"names":["CustomUnitsTable","table","useTable","user","useUserState","columns","useMemo","accessor","switchable","sortable","newUnit","useCreateApiFormModal","url","ApiEndpoints","custom_unit_list","title","_i18n","_","id","fields","customUnitsFields","selectedUnit","setSelectedUnit","useState","editUnit","useEditApiFormModal","pk","onFormSuccess","record","updateRecord","deleteUnit","useDeleteApiFormModal","rowActions","useCallback","RowEditAction","hidden","hasChangeRole","UserRoles","admin","onClick","open","RowDeleteAction","hasDeleteRole","tableActions","actions","push","jsx","AddItemButton","isStaff","modal","InvenTreeTable","apiUrl","enableDownload","AllUnitTable","BooleanColumn","all_units","enableSearch","enablePagination","enableColumnSwitching","dataFormatter","data","units","available_units","Object","entries","map","key","values","name","is_alias","compatible_units","isdimensionless","UnitManagementPanel","Stack","jsxs","Accordion","StylishText"],"mappings":"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"}
