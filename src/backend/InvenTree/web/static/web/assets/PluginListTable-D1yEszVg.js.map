{"version":3,"file":"PluginListTable-D1yEszVg.js","sources":["../../../../../../frontend/src/components/plugins/PluginSettingsPanel.tsx","../../../../../../frontend/src/components/plugins/PluginDrawer.tsx","../../../../../../frontend/src/tables/plugin/PluginListTable.tsx"],"sourcesContent":["import type { InvenTreePluginContext } from '@lib/types/Plugins';\nimport { useInvenTreeContext } from './PluginContext';\nimport RemoteComponent from './RemoteComponent';\n\n/**\n * Interface for the plugin admin data\n */\nexport interface PluginAdminInterface {\n  source: string;\n  context: any;\n}\n\n/**\n * A panel which is used to display custom settings UI for a plugin.\n *\n * This settings panel is loaded dynamically,\n * and requires that the plugin provides a javascript module,\n * which exports a function `renderPluginSettings`\n */\nexport default function PluginSettingsPanel({\n  pluginAdmin\n}: Readonly<{\n  pluginAdmin: PluginAdminInterface;\n}>) {\n  const ctx: InvenTreePluginContext = useInvenTreeContext();\n\n  return (\n    <RemoteComponent\n      source={pluginAdmin.source}\n      defaultFunctionName='renderPluginSettings'\n      context={{ ...ctx, context: pluginAdmin.context }}\n    />\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Accordion, Alert, Card, Stack, Text } from '@mantine/core';\nimport { IconExclamationCircle } from '@tabler/icons-react';\nimport { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { useInstance } from '../../hooks/UseInstance';\nimport { InfoItem } from '../items/InfoItem';\nimport { StylishText } from '../items/StylishText';\nimport { PluginSettingList } from '../settings/SettingList';\nimport type { PluginInterface } from './PluginInterface';\nimport PluginSettingsPanel from './PluginSettingsPanel';\n\n/**\n * Displays a drawer with detailed information on a specific plugin\n */\nexport default function PluginDrawer({\n  pluginKey,\n  pluginInstance\n}: Readonly<{\n  pluginKey?: string;\n  pluginInstance: PluginInterface;\n}>) {\n  const { id } = useParams();\n\n  const pluginPrimaryKey: string = useMemo(() => {\n    return pluginKey || id || '';\n  }, [pluginKey, id]);\n\n  const { instance: pluginAdmin } = useInstance({\n    endpoint: ApiEndpoints.plugin_admin,\n    pathParams: { key: pluginPrimaryKey },\n    defaultValue: {},\n    hasPrimaryKey: false,\n    refetchOnMount: true\n  });\n\n  const hasSettings: boolean = useMemo(() => {\n    return !!pluginInstance?.mixins?.settings;\n  }, [pluginInstance]);\n\n  if (!pluginInstance.active) {\n    return (\n      <Alert\n        color='red'\n        title={t`Plugin Inactive`}\n        icon={<IconExclamationCircle />}\n      >\n        <Text>{t`Plugin is not active`}</Text>\n      </Alert>\n    );\n  }\n\n  return (\n    <Accordion defaultValue={['plugin-details', 'plugin-settings']} multiple>\n      <Accordion.Item value='plugin-details'>\n        <Accordion.Control>\n          <StylishText size='lg'>{t`Plugin Information`}</StylishText>\n        </Accordion.Control>\n        <Accordion.Panel>\n          <Stack gap='xs'>\n            <Card withBorder>\n              <Stack gap='md'>\n                <Stack pos='relative' gap='xs'>\n                  <InfoItem\n                    type='text'\n                    name={t`Name`}\n                    value={pluginInstance?.name}\n                  />\n                  <InfoItem\n                    type='text'\n                    name={t`Description`}\n                    value={pluginInstance?.meta.description}\n                  />\n                  <InfoItem\n                    type='text'\n                    name={t`Author`}\n                    value={pluginInstance?.meta.author}\n                  />\n                  <InfoItem\n                    type='text'\n                    name={t`Date`}\n                    value={pluginInstance?.meta.pub_date}\n                  />\n                  <InfoItem\n                    type='text'\n                    name={t`Version`}\n                    value={pluginInstance?.meta.version}\n                  />\n                  <InfoItem\n                    type='boolean'\n                    name={t`Active`}\n                    value={pluginInstance?.active}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n            <Card withBorder>\n              <Stack gap='md'>\n                <Stack pos='relative' gap='xs'>\n                  {pluginInstance?.is_package && (\n                    <InfoItem\n                      type='text'\n                      name={t`Package Name`}\n                      value={pluginInstance?.package_name}\n                    />\n                  )}\n                  <InfoItem\n                    type='text'\n                    name={t`Installation Path`}\n                    value={pluginInstance?.meta.package_path}\n                  />\n                  <InfoItem\n                    type='boolean'\n                    name={t`Builtin`}\n                    value={pluginInstance?.is_builtin}\n                  />\n                  <InfoItem\n                    type='boolean'\n                    name={t`Package`}\n                    value={pluginInstance?.is_package}\n                  />\n                </Stack>\n              </Stack>\n            </Card>\n          </Stack>\n        </Accordion.Panel>\n      </Accordion.Item>\n      {hasSettings && (\n        <Accordion.Item value='plugin-settings'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`Plugin Settings`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <Card withBorder>\n              <PluginSettingList pluginKey={pluginPrimaryKey} />\n            </Card>\n          </Accordion.Panel>\n        </Accordion.Item>\n      )}\n      {pluginAdmin?.source && (\n        <Accordion.Item value='plugin-custom'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`Plugin Configuration`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <Card withBorder>\n              <PluginSettingsPanel pluginAdmin={pluginAdmin} />\n            </Card>\n          </Accordion.Panel>\n        </Accordion.Item>\n      )}\n    </Accordion>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Alert, Group, Stack, Text, Tooltip } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport {\n  IconCircleCheck,\n  IconCircleX,\n  IconHelpCircle,\n  IconInfoCircle,\n  IconPlaylistAdd,\n  IconRefresh,\n  IconTrash\n} from '@tabler/icons-react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ActionButton } from '@lib/components/ActionButton';\nimport type { RowAction } from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { DetailDrawer } from '../../components/nav/DetailDrawer';\nimport PluginDrawer from '../../components/plugins/PluginDrawer';\nimport type { PluginInterface } from '../../components/plugins/PluginInterface';\nimport { useApi } from '../../contexts/ApiContext';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useServerApiState } from '../../states/ServerApiState';\nimport { useUserState } from '../../states/UserState';\nimport { BooleanColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Construct an indicator icon for a single plugin\n */\nfunction PluginIcon({ plugin }: Readonly<{ plugin: PluginInterface }>) {\n  if (plugin?.is_installed) {\n    if (plugin?.active) {\n      return (\n        <Tooltip label={t`Plugin is active`}>\n          <IconCircleCheck color='green' />\n        </Tooltip>\n      );\n    } else {\n      return (\n        <Tooltip label={t`Plugin is inactive`}>\n          <IconCircleX color='red' />\n        </Tooltip>\n      );\n    }\n  } else {\n    return (\n      <Tooltip label={t`Plugin is not installed`}>\n        <IconHelpCircle />\n      </Tooltip>\n    );\n  }\n}\n\n/**\n * Table displaying list of available plugins\n */\nexport default function PluginListTable() {\n  const api = useApi();\n  const table = useTable('plugin');\n  const navigate = useNavigate();\n  const user = useUserState();\n\n  const { server } = useServerApiState();\n\n  const pluginTableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        title: t`Plugin`,\n        sortable: true,\n        render: (record: any) => {\n          if (!record) {\n            return;\n          }\n\n          return (\n            <Group justify='left'>\n              <PluginIcon plugin={record} />\n              <Text>{record.name}</Text>\n            </Group>\n          );\n        }\n      },\n      BooleanColumn({\n        accessor: 'active',\n        sortable: true,\n        title: t`Active`\n      }),\n      BooleanColumn({\n        accessor: 'is_builtin',\n        sortable: false,\n        title: t`Builtin`\n      }),\n      BooleanColumn({\n        accessor: 'is_mandatory',\n        sortable: false,\n        title: t`Mandatory`\n      }),\n      {\n        accessor: 'meta.description',\n        title: t`Description`,\n        sortable: false,\n        render: (record: any) => {\n          if (record.active) {\n            return record?.meta.description;\n          } else {\n            return (\n              <Text\n                style={{ fontStyle: 'italic' }}\n                size='sm'\n              >{t`Description not available`}</Text>\n            );\n          }\n        }\n      },\n      {\n        accessor: 'meta.version',\n        title: t`Version`,\n        sortable: false,\n        render: (record: any) => {\n          return record?.meta.version;\n        }\n      },\n      {\n        accessor: 'meta.author',\n        title: 'Author',\n        sortable: false\n      }\n    ];\n  }, []);\n\n  const [selectedPlugin, setSelectedPlugin] = useState<any>({});\n  const [selectedPluginKey, setSelectedPluginKey] = useState<string>('');\n  const [activate, setActivate] = useState<boolean>(false);\n\n  const activateModalContent = useMemo(() => {\n    return (\n      <Stack gap='xs'>\n        <Alert\n          color={activate ? 'green' : 'red'}\n          icon={<IconCircleCheck />}\n          title={\n            activate\n              ? t`Confirm plugin activation`\n              : t`Confirm plugin deactivation`\n          }\n        >\n          <Text>\n            {activate\n              ? t`The selected plugin will be activated`\n              : t`The selected plugin will be deactivated`}\n          </Text>\n        </Alert>\n      </Stack>\n    );\n  }, [activate]);\n\n  // Determine available actions for a given plugin\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      // Only superuser can perform plugin actions\n      if (!user.isSuperuser() || !server.plugins_enabled) {\n        return [];\n      }\n\n      return [\n        {\n          hidden: record.is_mandatory != false || record.active != true,\n          title: t`Deactivate`,\n          color: 'red',\n          icon: <IconCircleX />,\n          onClick: () => {\n            setSelectedPluginKey(record.key);\n            setActivate(false);\n            activatePluginModal.open();\n          }\n        },\n        {\n          hidden:\n            record.is_mandatory != false ||\n            !record.is_installed ||\n            record.active != false,\n          title: t`Activate`,\n          tooltip: t`Activate selected plugin`,\n          color: 'green',\n          icon: <IconCircleCheck />,\n          onClick: () => {\n            setSelectedPluginKey(record.key);\n            setActivate(true);\n            activatePluginModal.open();\n          }\n        },\n        {\n          hidden: !record.active || !record.is_package || !record.package_name,\n          title: t`Update`,\n          tooltip: t`Update selected plugin`,\n          color: 'blue',\n          icon: <IconRefresh />,\n          onClick: () => {\n            setPluginPackage(record.package_name);\n            installPluginModal.open();\n          }\n        },\n        {\n          // Uninstall an installed plugin\n          // Must be inactive, not a builtin, not a sample, and installed as a package\n          hidden:\n            !user.isSuperuser() ||\n            record.active ||\n            record.is_builtin ||\n            record.is_mandatory ||\n            record.is_sample ||\n            !record.is_installed ||\n            !record.is_package,\n          title: t`Uninstall`,\n          tooltip: t`Uninstall selected plugin`,\n          color: 'red',\n          icon: <IconCircleX />,\n          onClick: () => {\n            setSelectedPluginKey(record.key);\n            uninstallPluginModal.open();\n          }\n        },\n        {\n          // Delete a plugin configuration\n          // Must be inactive, not a builtin, not a sample, and not installed (i.e. no matching plugin)\n          hidden:\n            record.active ||\n            record.is_builtin ||\n            record.is_mandatory ||\n            record.is_sample ||\n            record.is_installed ||\n            !user.isSuperuser(),\n          title: t`Delete`,\n          tooltip: t`Delete selected plugin configuration`,\n          color: 'red',\n          icon: <IconTrash />,\n          onClick: () => {\n            setSelectedPluginKey(record.key);\n            deletePluginModal.open();\n          }\n        }\n      ];\n    },\n    [user, server]\n  );\n\n  const [pluginPackage, setPluginPackage] = useState<string>('');\n\n  const activatePluginModal = useEditApiFormModal({\n    title: t`Activate Plugin`,\n    url: ApiEndpoints.plugin_activate,\n    pathParams: { key: selectedPluginKey },\n    preFormContent: activateModalContent,\n    fetchInitialData: false,\n    method: 'PATCH',\n    successMessage: activate\n      ? t`The plugin was activated`\n      : t`The plugin was deactivated`,\n    fields: {\n      active: {\n        hidden: true\n      }\n    },\n    initialData: {\n      active: activate\n    },\n    table: table\n  });\n\n  const installPluginModal = useCreateApiFormModal({\n    title: t`Install Plugin`,\n    url: ApiEndpoints.plugin_install,\n    timeout: 30000,\n    fields: {\n      packagename: {},\n      url: {},\n      version: {},\n      confirm: {}\n    },\n    initialData: {\n      packagename: pluginPackage\n    },\n    closeOnClickOutside: false,\n    submitText: t`Install`,\n    successMessage: t`Plugin installed successfully`,\n    table: table\n  });\n\n  const uninstallPluginModal = useEditApiFormModal({\n    title: t`Uninstall Plugin`,\n    url: ApiEndpoints.plugin_uninstall,\n    pathParams: { key: selectedPluginKey },\n    fetchInitialData: false,\n    timeout: 30000,\n    fields: {\n      delete_config: {}\n    },\n    preFormContent: (\n      <Alert\n        color='red'\n        icon={<IconInfoCircle />}\n        title={t`Confirm plugin uninstall`}\n      >\n        <Stack gap='xs'>\n          <Text>{t`The selected plugin will be uninstalled.`}</Text>\n          <Text>{t`This action cannot be undone`}</Text>\n        </Stack>\n      </Alert>\n    ),\n    successMessage: t`Plugin uninstalled successfully`,\n    table: table\n  });\n\n  const deletePluginModal = useDeleteApiFormModal({\n    url: ApiEndpoints.plugin_list,\n    pk: selectedPluginKey,\n    fetchInitialData: false,\n    title: t`Delete Plugin`,\n    preFormWarning: t`Deleting this plugin configuration will remove all associated settings and data. Are you sure you want to delete this plugin?`,\n    table: table\n  });\n\n  const reloadPlugins = useCallback(() => {\n    api\n      .post(apiUrl(ApiEndpoints.plugin_reload), {\n        full_reload: true,\n        force_reload: true,\n        collect_plugins: true\n      })\n      .then(() => {\n        showNotification({\n          title: t`Plugins reloaded`,\n          message: t`Plugins were reloaded successfully`,\n          color: 'green'\n        });\n        table.refreshTable();\n      });\n  }, []);\n\n  // Custom table actions\n  const tableActions = useMemo(() => {\n    if (!user.isSuperuser() || !server.plugins_enabled) {\n      return [];\n    }\n\n    return [\n      <ActionButton\n        key='reload'\n        color='green'\n        icon={<IconRefresh />}\n        tooltip={t`Reload Plugins`}\n        onClick={reloadPlugins}\n      />,\n      <ActionButton\n        key='install'\n        color='green'\n        icon={<IconPlaylistAdd />}\n        tooltip={t`Install Plugin`}\n        onClick={() => {\n          setPluginPackage('');\n          installPluginModal.open();\n        }}\n        disabled={server.plugins_install_disabled || false}\n      />\n    ];\n  }, [user, server]);\n\n  return (\n    <>\n      {installPluginModal.modal}\n      {uninstallPluginModal.modal}\n      {deletePluginModal.modal}\n      {activatePluginModal.modal}\n      <DetailDrawer\n        title={`${t`Plugin Detail`} - ${selectedPlugin?.name}`}\n        size={'65%'}\n        renderContent={(pluginKey) => {\n          if (!pluginKey) return;\n          return (\n            <PluginDrawer\n              pluginKey={pluginKey}\n              pluginInstance={selectedPlugin}\n            />\n          );\n        }}\n      />\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.plugin_list)}\n        tableState={table}\n        columns={pluginTableColumns}\n        props={{\n          enableDownload: false,\n          rowActions: rowActions,\n          onRowClick: (plugin) => {\n            setSelectedPlugin(plugin);\n            navigate(`${plugin.key}/`);\n          },\n          tableActions: tableActions,\n          tableFilters: [\n            {\n              name: 'active',\n              label: t`Active`,\n              type: 'boolean'\n            },\n            {\n              name: 'builtin',\n              label: t`Builtin`,\n              type: 'boolean'\n            },\n            {\n              name: 'mandatory',\n              label: t`Mandatory`,\n              type: 'boolean'\n            },\n            {\n              name: 'sample',\n              label: t`Sample`,\n              type: 'boolean'\n            },\n            {\n              name: 'installed',\n              label: t`Installed`,\n              type: 'boolean'\n            }\n          ]\n        }}\n      />\n    </>\n  );\n}\n"],"names":["PluginSettingsPanel","pluginAdmin","ctx","useInvenTreeContext","RemoteComponent","source","context","PluginDrawer","pluginKey","pluginInstance","id","useParams","pluginPrimaryKey","useMemo","instance","useInstance","endpoint","ApiEndpoints","plugin_admin","pathParams","key","defaultValue","hasPrimaryKey","refetchOnMount","hasSettings","mixins","settings","active","jsxs","Accordion","jsx","StylishText","_i18n","_","Stack","Card","InfoItem","name","meta","description","author","pub_date","version","is_package","package_name","package_path","is_builtin","PluginSettingList","Alert","IconExclamationCircle","Text","PluginIcon","plugin","is_installed","Tooltip","IconCircleCheck","IconCircleX","IconHelpCircle","PluginListTable","api","useApi","table","useTable","navigate","useNavigate","user","useUserState","server","useServerApiState","pluginTableColumns","accessor","title","sortable","render","record","Group","BooleanColumn","fontStyle","selectedPlugin","setSelectedPlugin","useState","selectedPluginKey","setSelectedPluginKey","activate","setActivate","activateModalContent","rowActions","useCallback","isSuperuser","plugins_enabled","hidden","is_mandatory","color","icon","onClick","activatePluginModal","open","tooltip","IconRefresh","setPluginPackage","installPluginModal","is_sample","uninstallPluginModal","IconTrash","deletePluginModal","pluginPackage","useEditApiFormModal","url","plugin_activate","preFormContent","fetchInitialData","method","successMessage","fields","initialData","useCreateApiFormModal","plugin_install","timeout","packagename","confirm","closeOnClickOutside","submitText","plugin_uninstall","delete_config","IconInfoCircle","useDeleteApiFormModal","plugin_list","pk","preFormWarning","reloadPlugins","post","apiUrl","plugin_reload","full_reload","force_reload","collect_plugins","then","showNotification","message","refreshTable","tableActions","ActionButton","IconPlaylistAdd","plugins_install_disabled","modal","DetailDrawer","InvenTreeTable","enableDownload","onRowClick","tableFilters","label","type"],"mappings":"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"}
