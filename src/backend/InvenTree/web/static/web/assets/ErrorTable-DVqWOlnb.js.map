{"version":3,"file":"ErrorTable-DVqWOlnb.js","sources":["../../../../../../frontend/src/tables/settings/ErrorTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Group, Loader, Stack, Table, Text } from '@mantine/core';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { type RowAction, RowDeleteAction } from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { CopyButton } from '../../components/buttons/CopyButton';\nimport { DetailDrawer } from '../../components/nav/DetailDrawer';\nimport { useDeleteApiFormModal } from '../../hooks/UseForm';\nimport { useInstance } from '../../hooks/UseInstance';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nfunction ErrorDetail({ errorId }: Readonly<{ errorId?: number }>) {\n  const { id } = useParams();\n\n  const errorPrimaryKey = useMemo(() => {\n    return errorId ?? id;\n  }, [errorId, id]);\n\n  const errorInstance = useInstance({\n    endpoint: ApiEndpoints.error_report_list,\n    pk: errorPrimaryKey,\n    defaultValue: {},\n    hasPrimaryKey: true,\n    refetchOnMount: true\n  });\n\n  const error = useMemo(\n    () => errorInstance.instance || {},\n    [errorInstance.instance]\n  );\n\n  if (\n    errorInstance.instanceQuery.isFetching ||\n    errorInstance.instanceQuery.isLoading\n  ) {\n    return <Loader />;\n  }\n\n  return (\n    <Stack gap='xs'>\n      <Table>\n        <Table.Tbody>\n          <Table.Tr>\n            <Table.Th>{t`Message`}</Table.Th>\n            <Table.Td>{error.info}</Table.Td>\n            <Table.Td>\n              <Group justify='right'>\n                <CopyButton value={error.info} size='sm' />\n              </Group>\n            </Table.Td>\n          </Table.Tr>\n          <Table.Tr>\n            <Table.Th>{t`Timestamp`}</Table.Th>\n            <Table.Td>{error.when}</Table.Td>\n          </Table.Tr>\n          <Table.Tr>\n            <Table.Th>{t`Path`}</Table.Th>\n            <Table.Td>{error.path}</Table.Td>\n          </Table.Tr>\n          <Table.Tr>\n            <Table.Th>{t`Traceback`}</Table.Th>\n            <Table.Td colSpan={2}>\n              <Group justify='right'>\n                <CopyButton value={error.data} size='sm' />\n              </Group>\n            </Table.Td>\n          </Table.Tr>\n          <Table.Tr>\n            <Table.Td colSpan={2}>\n              <Stack gap={3}>\n                {error.data?.split('\\n').map((line: string, index: number) => (\n                  <Text size='xs' key={`error-line-${index}`}>\n                    {line}\n                  </Text>\n                ))}\n              </Stack>\n            </Table.Td>\n          </Table.Tr>\n        </Table.Tbody>\n      </Table>\n    </Stack>\n  );\n}\n\n/*\n * Table for display server error information\n */\nexport default function ErrorReportTable() {\n  const table = useTable('error-report');\n  const user = useUserState();\n  const navigate = useNavigate();\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'when',\n        title: t`When`,\n        sortable: true\n      },\n      {\n        accessor: 'path',\n        title: t`Path`,\n        sortable: true\n      },\n      {\n        accessor: 'info',\n        title: t`Error Information`\n      }\n    ];\n  }, []);\n\n  const [selectedError, setSelectedError] = useState<any>({});\n\n  const deleteErrorModal = useDeleteApiFormModal({\n    url: ApiEndpoints.error_report_list,\n    pk: selectedError.pk,\n    title: t`Delete Error Report`,\n    preFormContent: (\n      <Text c='red'>{t`Are you sure you want to delete this error report?`}</Text>\n    ),\n    successMessage: t`Error report deleted`,\n    table: table\n  });\n\n  const rowActions = useCallback((record: any): RowAction[] => {\n    return [\n      RowDeleteAction({\n        onClick: () => {\n          setSelectedError(record);\n          deleteErrorModal.open();\n        }\n      })\n    ];\n  }, []);\n\n  return (\n    <>\n      {deleteErrorModal.modal}\n      <DetailDrawer\n        title={t`Error Details`}\n        size={'xl'}\n        renderContent={(pk) => {\n          if (!pk) return;\n\n          return <ErrorDetail errorId={selectedError.pk} />;\n        }}\n      />\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.error_report_list)}\n        tableState={table}\n        columns={columns}\n        props={{\n          enableBulkDelete: user.isStaff(),\n          enableSelection: true,\n          rowActions: rowActions,\n          onRowClick: (row) => {\n            setSelectedError(row);\n            navigate(`${row.pk}/`);\n          }\n        }}\n      />\n    </>\n  );\n}\n"],"names":["ErrorDetail","errorId","id","useParams","errorPrimaryKey","useMemo","errorInstance","useInstance","endpoint","ApiEndpoints","error_report_list","pk","defaultValue","hasPrimaryKey","refetchOnMount","error","instance","instanceQuery","isFetching","isLoading","Loader","jsx","Stack","Table","jsxs","_i18n","_","info","Group","CopyButton","when","path","data","split","map","line","index","Text","ErrorReportTable","table","useTable","user","useUserState","navigate","useNavigate","columns","accessor","title","sortable","selectedError","setSelectedError","useState","deleteErrorModal","useDeleteApiFormModal","url","preFormContent","successMessage","rowActions","useCallback","record","RowDeleteAction","onClick","open","modal","DetailDrawer","InvenTreeTable","apiUrl","enableBulkDelete","isStaff","enableSelection","onRowClick","row"],"mappings":"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"}
