{"version":3,"file":"SupplierPartTable-C-GEaDRA.js","sources":["../../../../../../frontend/src/tables/purchasing/SupplierPartTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Text } from '@mantine/core';\nimport { type ReactNode, useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { useSupplierPartFields } from '../../forms/CompanyForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport {\n  BooleanColumn,\n  CompanyColumn,\n  DecimalColumn,\n  DescriptionColumn,\n  LinkColumn,\n  NoteColumn,\n  PartColumn\n} from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\nimport { TableHoverCard } from '../TableHoverCard';\n\n/*\n * Construct a table listing supplier parts\n */\n\nexport function SupplierPartTable({\n  params\n}: Readonly<{ params: any }>): ReactNode {\n  const table = useTable('supplierparts');\n\n  const user = useUserState();\n\n  // Construct table columns for this table\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'part',\n        switchable: 'part' in params,\n        sortable: true,\n        render: (record: any) =>\n          PartColumn({ part: record?.part_detail, full_name: true })\n      },\n      {\n        accessor: 'supplier',\n        sortable: true,\n        render: (record: any) => (\n          <CompanyColumn company={record?.supplier_detail} />\n        )\n      },\n      {\n        accessor: 'SKU',\n        title: t`Supplier Part`,\n        sortable: true\n      },\n      DescriptionColumn({}),\n      {\n        accessor: 'manufacturer',\n        title: t`Manufacturer`,\n        sortable: true,\n        render: (record: any) => (\n          <CompanyColumn company={record?.manufacturer_detail} />\n        )\n      },\n      {\n        accessor: 'MPN',\n\n        sortable: true,\n        title: t`MPN`,\n        render: (record: any) => record?.manufacturer_part_detail?.MPN\n      },\n      BooleanColumn({\n        accessor: 'active',\n        title: t`Active`,\n        sortable: true,\n        switchable: true,\n        defaultVisible: false\n      }),\n      DecimalColumn({\n        accessor: 'in_stock',\n        sortable: true\n      }),\n      {\n        accessor: 'packaging',\n        sortable: true,\n        defaultVisible: false\n      },\n      {\n        accessor: 'pack_quantity',\n        sortable: true,\n\n        render: (record: any) => {\n          const part = record?.part_detail ?? {};\n\n          const extra = [];\n\n          if (part.units) {\n            extra.push(\n              <Text key='base'>\n                {t`Base units`} : {part.units}\n              </Text>\n            );\n          }\n\n          return (\n            <TableHoverCard\n              value={record.pack_quantity}\n              extra={extra}\n              title={t`Pack Quantity`}\n            />\n          );\n        }\n      },\n      LinkColumn({}),\n      NoteColumn({}),\n      {\n        accessor: 'available',\n        sortable: true,\n        defaultVisible: false,\n        render: (record: any) => {\n          const extra = [];\n\n          if (record.availablility_updated) {\n            extra.push(\n              <Text>\n                {t`Updated`} : {record.availablility_updated}\n              </Text>\n            );\n          }\n\n          return <TableHoverCard value={record.available} extra={extra} />;\n        }\n      }\n    ];\n  }, [params]);\n\n  const supplierPartFields = useSupplierPartFields({\n    partId: params?.part\n  });\n\n  const addSupplierPart = useCreateApiFormModal({\n    url: ApiEndpoints.supplier_part_list,\n    title: t`Add Supplier Part`,\n    fields: supplierPartFields,\n    initialData: {\n      part: params?.part,\n      supplier: params?.supplier\n    },\n    table: table,\n    successMessage: t`Supplier part created`\n  });\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-supplier-part'\n        tooltip={t`Add supplier part`}\n        onClick={() => addSupplierPart.open()}\n        hidden={!user.hasAddRole(UserRoles.purchase_order)}\n      />\n    ];\n  }, [user]);\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    return [\n      {\n        name: 'active',\n        label: t`Active`,\n        description: t`Show active supplier parts`\n      },\n      {\n        name: 'part_active',\n        label: t`Active Part`,\n        description: t`Show active internal parts`\n      },\n      {\n        name: 'supplier_active',\n        label: t`Active Supplier`,\n        description: t`Show active suppliers`\n      },\n      {\n        name: 'has_stock',\n        label: t`In Stock`,\n        description: t`Show supplier parts with stock`\n      }\n    ];\n  }, []);\n\n  const editSupplierPartFields = useSupplierPartFields({});\n\n  const [selectedSupplierPart, setSelectedSupplierPart] = useState<number>(0);\n\n  const editSupplierPart = useEditApiFormModal({\n    url: ApiEndpoints.supplier_part_list,\n    pk: selectedSupplierPart,\n    title: t`Edit Supplier Part`,\n    fields: editSupplierPartFields,\n    table: table\n  });\n\n  const deleteSupplierPart = useDeleteApiFormModal({\n    url: ApiEndpoints.supplier_part_list,\n    pk: selectedSupplierPart,\n    title: t`Delete Supplier Part`,\n    table: table\n  });\n\n  // Row action callback\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedSupplierPart(record.pk);\n            editSupplierPart.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedSupplierPart(record.pk);\n            deleteSupplierPart.open();\n          }\n        })\n      ];\n    },\n    [user, editSupplierPartFields]\n  );\n\n  return (\n    <>\n      {addSupplierPart.modal}\n      {editSupplierPart.modal}\n      {deleteSupplierPart.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.supplier_part_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          params: {\n            ...params,\n            part_detail: true,\n            supplier_detail: true,\n            manufacturer_detail: true\n          },\n          rowActions: rowActions,\n          enableDownload: true,\n          tableActions: tableActions,\n          tableFilters: tableFilters,\n          modelType: ModelType.supplierpart\n        }}\n      />\n    </>\n  );\n}\n"],"names":["SupplierPartTable","params","table","useTable","user","useUserState","tableColumns","useMemo","accessor","switchable","sortable","render","record","PartColumn","part","part_detail","full_name","CompanyColumn","supplier_detail","title","_i18n","_","id","DescriptionColumn","manufacturer_detail","manufacturer_part_detail","MPN","BooleanColumn","defaultVisible","DecimalColumn","extra","units","push","Text","TableHoverCard","pack_quantity","LinkColumn","NoteColumn","availablility_updated","jsx","available","supplierPartFields","useSupplierPartFields","partId","addSupplierPart","useCreateApiFormModal","url","ApiEndpoints","supplier_part_list","fields","initialData","supplier","successMessage","tableActions","AddItemButton","open","hasAddRole","UserRoles","purchase_order","tableFilters","name","label","description","editSupplierPartFields","selectedSupplierPart","setSelectedSupplierPart","useState","editSupplierPart","useEditApiFormModal","pk","deleteSupplierPart","useDeleteApiFormModal","rowActions","useCallback","RowEditAction","hidden","hasChangeRole","onClick","RowDeleteAction","hasDeleteRole","modal","InvenTreeTable","apiUrl","enableDownload","modelType","ModelType","supplierpart"],"mappings":"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"}
