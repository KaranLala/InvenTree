{"version":3,"file":"BuildAllocatedStockTable-B94pFMpl.js","sources":["../../../../../../frontend/src/tables/build/BuildAllocatedStockTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport type { TableColumn } from '@lib/types/Tables';\nimport type { StockOperationProps } from '../../forms/StockForms';\nimport {\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useStockAdjustActions } from '../../hooks/UseStockAdjustActions';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport {\n  DecimalColumn,\n  LocationColumn,\n  PartColumn,\n  ReferenceColumn,\n  StatusColumn\n} from '../ColumnRenderers';\nimport { IncludeVariantsFilter, StockLocationFilter } from '../Filter';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Render a table of allocated stock for a build.\n */\nexport default function BuildAllocatedStockTable({\n  buildId,\n  stockId,\n  partId,\n  showBuildInfo,\n  showPartInfo,\n  allowEdit,\n  modelTarget,\n  modelField\n}: Readonly<{\n  buildId?: number;\n  stockId?: number;\n  partId?: number;\n  showPartInfo?: boolean;\n  showBuildInfo?: boolean;\n  allowEdit?: boolean;\n  modelTarget?: ModelType;\n  modelField?: string;\n}>) {\n  const user = useUserState();\n  const table = useTable(\n    !!partId ? 'buildallocatedstock-part' : 'buildallocatedstock'\n  );\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    const filters: TableFilter[] = [\n      {\n        name: 'tracked',\n        label: t`Allocated to Output`,\n        description: t`Show items allocated to a build output`\n      }\n    ];\n\n    if (!!partId) {\n      filters.push(IncludeVariantsFilter());\n    }\n\n    filters.push(StockLocationFilter());\n\n    return filters;\n  }, [partId]);\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      ReferenceColumn({\n        accessor: 'build_detail.reference',\n        title: t`Build Order`,\n        switchable: false,\n        hidden: showBuildInfo != true\n      }),\n      {\n        accessor: 'build_detail.title',\n        title: t`Description`,\n        hidden: showBuildInfo != true\n      },\n      StatusColumn({\n        accessor: 'build_detail.status',\n        model: ModelType.build,\n        title: t`Order Status`,\n        hidden: showBuildInfo != true\n      }),\n      {\n        accessor: 'part',\n        hidden: !showPartInfo,\n        title: t`Part`,\n        sortable: true,\n        switchable: false,\n        render: (record: any) => PartColumn({ part: record.part_detail })\n      },\n      {\n        accessor: 'part_detail.IPN',\n        ordering: 'IPN',\n        hidden: !showPartInfo,\n        title: t`IPN`,\n        sortable: true,\n        switchable: true\n      },\n      {\n        hidden: !showPartInfo,\n        accessor: 'bom_reference',\n        title: t`Reference`,\n        sortable: true,\n        switchable: true\n      },\n      {\n        accessor: 'serial',\n        title: t`Serial Number`,\n        sortable: false,\n        switchable: true,\n        render: (record: any) => record?.stock_item_detail?.serial\n      },\n      {\n        accessor: 'batch',\n        title: t`Batch Code`,\n        sortable: false,\n        switchable: true,\n        render: (record: any) => record?.stock_item_detail?.batch\n      },\n      DecimalColumn({\n        accessor: 'available',\n        title: t`Available Quantity`\n      }),\n      DecimalColumn({\n        accessor: 'quantity',\n        title: t`Allocated Quantity`,\n        sortable: true,\n        switchable: false\n      }),\n      LocationColumn({\n        accessor: 'location_detail',\n        switchable: true,\n        sortable: true\n      }),\n      {\n        accessor: 'install_into',\n        title: t`Build Output`,\n        sortable: true\n      },\n      {\n        accessor: 'sku',\n        title: t`Supplier Part`,\n        render: (record: any) => record?.supplier_part_detail?.SKU,\n        sortable: true\n      }\n    ];\n  }, []);\n\n  const [selectedItem, setSelectedItem] = useState<number>(0);\n\n  const editItem = useEditApiFormModal({\n    pk: selectedItem,\n    url: ApiEndpoints.build_item_list,\n    title: t`Edit Stock Allocation`,\n    fields: {\n      stock_item: {\n        disabled: true\n      },\n      quantity: {}\n    },\n    table: table\n  });\n\n  const deleteItem = useDeleteApiFormModal({\n    pk: selectedItem,\n    url: ApiEndpoints.build_item_list,\n    title: t`Delete Stock Allocation`,\n    table: table\n  });\n\n  const stockOperationProps: StockOperationProps = useMemo(() => {\n    // Extract stock items from the selected records\n    // Note that the table is actually a list of BuildItem instances,\n    // so we need to reconstruct the stock item details\n    const stockItems: any[] = table.selectedRecords\n      .filter((item: any) => !!item.stock_item_detail)\n      .map((item: any) => {\n        return {\n          ...item.stock_item_detail,\n          part_detail: item.part_detail,\n          location_detail: item.location_detail\n        };\n      });\n\n    return {\n      items: stockItems,\n      model: ModelType.stockitem,\n      refresh: table.refreshTable\n    };\n  }, [table.selectedRecords, table.refreshTable]);\n\n  const stockAdjustActions = useStockAdjustActions({\n    formProps: stockOperationProps,\n    merge: false,\n    assign: false,\n    delete: false,\n    add: false,\n    count: false,\n    remove: false\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.build),\n          onClick: () => {\n            setSelectedItem(record.pk);\n            editItem.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.build),\n          onClick: () => {\n            setSelectedItem(record.pk);\n            deleteItem.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [stockAdjustActions.dropdown];\n  }, [stockAdjustActions.dropdown]);\n\n  return (\n    <>\n      {editItem.modal}\n      {deleteItem.modal}\n      {stockAdjustActions.modals.map((modal) => modal.modal)}\n      <InvenTreeTable\n        tableState={table}\n        url={apiUrl(ApiEndpoints.build_item_list)}\n        columns={tableColumns}\n        props={{\n          params: {\n            build: buildId,\n            part: partId,\n            stock_item: stockId,\n            build_detail: showBuildInfo ?? false,\n            part_detail: showPartInfo ?? false,\n            location_detail: true,\n            stock_detail: true,\n            supplier_detail: true\n          },\n          enableBulkDelete: allowEdit && user.hasDeleteRole(UserRoles.build),\n          enableDownload: true,\n          enableSelection: allowEdit && user.hasDeleteRole(UserRoles.build),\n          rowActions: rowActions,\n          tableActions: tableActions,\n          tableFilters: tableFilters,\n          enableLabels: true,\n          enableReports: true,\n          printingAccessor: 'stock_item',\n          modelField: modelField ?? 'stock_item',\n          modelType: modelTarget ?? ModelType.stockitem\n        }}\n      />\n    </>\n  );\n}\n"],"names":["BuildAllocatedStockTable","buildId","stockId","partId","showBuildInfo","showPartInfo","allowEdit","modelTarget","modelField","user","useUserState","table","useTable","tableFilters","useMemo","filters","name","label","_i18n","_","id","description","push","IncludeVariantsFilter","StockLocationFilter","tableColumns","ReferenceColumn","accessor","title","switchable","hidden","StatusColumn","model","ModelType","build","sortable","render","record","PartColumn","part","part_detail","ordering","stock_item_detail","serial","batch","DecimalColumn","LocationColumn","supplier_part_detail","SKU","selectedItem","setSelectedItem","useState","editItem","useEditApiFormModal","pk","url","ApiEndpoints","build_item_list","fields","stock_item","disabled","quantity","deleteItem","useDeleteApiFormModal","stockOperationProps","items","selectedRecords","filter","item","map","location_detail","stockitem","refresh","refreshTable","stockAdjustActions","useStockAdjustActions","formProps","merge","assign","delete","add","count","remove","rowActions","useCallback","RowEditAction","hasChangeRole","UserRoles","onClick","open","RowDeleteAction","hasDeleteRole","tableActions","dropdown","modal","modals","jsx","InvenTreeTable","apiUrl","params","build_detail","stock_detail","supplier_detail","enableBulkDelete","enableDownload","enableSelection","enableLabels","enableReports","printingAccessor","modelType"],"mappings":"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"}
