{"version":3,"file":"Layout-Cbndcs9G.js","sources":["../../../../../../frontend/node_modules/@mantine/spotlight/esm/spotlight.store.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/is-actions-group.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/default-spotlight-filter.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/limit-actions.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/Spotlight.context.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightAction.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightActionsGroup.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightActionsList.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightEmpty.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightFooter.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/get-hotkeys.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightRoot.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightSearch.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/Spotlight.mjs","../../../../../../frontend/src/defaults/actions.tsx","../../../../../../frontend/src/components/nav/Footer.tsx","../../../../../../frontend/src/components/buttons/ScanButton.tsx","../../../../../../frontend/src/components/buttons/SpotlightButton.tsx","../../../../../../frontend/src/components/nav/MainMenu.tsx","../../../../../../frontend/src/components/items/inventree.svg","../../../../../../frontend/src/components/items/InvenTreeLogo.tsx","../../../../../../frontend/src/components/nav/NavHoverMenu.tsx","../../../../../../frontend/src/components/items/MenuLinks.tsx","../../../../../../frontend/src/components/nav/NavigationDrawer.tsx","../../../../../../frontend/src/components/nav/NotificationDrawer.tsx","../../../../../../frontend/src/components/nav/SearchDrawer.tsx","../../../../../../frontend/src/components/nav/Header.tsx","../../../../../../frontend/src/components/nav/Layout.tsx"],"sourcesContent":["'use client';\nimport { clamp } from '@mantine/hooks';\nimport { createStore, useStore } from '@mantine/store';\n\nconst createSpotlightStore = () => createStore({\n  opened: false,\n  empty: false,\n  selected: -1,\n  listId: \"\",\n  query: \"\",\n  registeredActions: /* @__PURE__ */ new Set()\n});\nconst useSpotlight = (store) => useStore(store);\nfunction updateSpotlightStateAction(update, store) {\n  const state = store.getState();\n  store.setState({ ...state, ...update(store.getState()) });\n}\nfunction openSpotlightAction(store) {\n  updateSpotlightStateAction(() => ({ opened: true, selected: -1 }), store);\n}\nfunction closeSpotlightAction(store) {\n  updateSpotlightStateAction(() => ({ opened: false }), store);\n}\nfunction toggleSpotlightAction(store) {\n  updateSpotlightStateAction(\n    (state) => ({ opened: !state.opened, selected: state.opened ? state.selected : -1 }),\n    store\n  );\n}\nfunction setSelectedAction(index, store) {\n  store.updateState((state) => ({ ...state, selected: index }));\n}\nfunction setListId(id, store) {\n  store.updateState((state) => ({ ...state, listId: id }));\n}\nfunction findElementByQuerySelector(selector, root = document) {\n  const element = root.querySelector(selector);\n  if (element) {\n    return element;\n  }\n  const children = root instanceof ShadowRoot ? root.host.children : root.children;\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    if (child.shadowRoot) {\n      const shadowElement = findElementByQuerySelector(selector, child.shadowRoot);\n      if (shadowElement) {\n        return shadowElement;\n      }\n    }\n    const nestedElement = findElementByQuerySelector(selector, child);\n    if (nestedElement) {\n      return nestedElement;\n    }\n  }\n  return null;\n}\nfunction selectAction(index, store) {\n  const state = store.getState();\n  const actionsList = state.listId ? findElementByQuerySelector(`#${state.listId}`) : null;\n  const selected = actionsList?.querySelector(\"[data-selected]\");\n  const actions = actionsList?.querySelectorAll(\"[data-action]\") ?? [];\n  const nextIndex = index === -1 ? actions.length - 1 : index === actions.length ? 0 : index;\n  const selectedIndex = clamp(nextIndex, 0, actions.length - 1);\n  selected?.removeAttribute(\"data-selected\");\n  actions[selectedIndex]?.scrollIntoView({ block: \"nearest\" });\n  actions[selectedIndex]?.setAttribute(\"data-selected\", \"true\");\n  setSelectedAction(selectedIndex, store);\n  return selectedIndex;\n}\nfunction selectNextAction(store) {\n  return selectAction(store.getState().selected + 1, store);\n}\nfunction selectPreviousAction(store) {\n  return selectAction(store.getState().selected - 1, store);\n}\nfunction triggerSelectedAction(store) {\n  const state = store.getState();\n  const selected = findElementByQuerySelector(\n    `#${state.listId} [data-selected]`\n  );\n  selected?.click();\n}\nfunction registerAction(id, store) {\n  const state = store.getState();\n  state.registeredActions.add(id);\n  return () => {\n    state.registeredActions.delete(id);\n  };\n}\nfunction setQuery(query, store) {\n  updateSpotlightStateAction(() => ({ query }), store);\n  Promise.resolve().then(() => {\n    selectAction(0, store);\n    updateSpotlightStateAction(\n      (state) => ({\n        empty: state.query.trim().length > 0 && state.registeredActions.size === 0 || false\n      }),\n      store\n    );\n  });\n}\nfunction clearSpotlightState({ clearQuery }, store) {\n  store.updateState((state) => ({\n    ...state,\n    selected: -1,\n    query: clearQuery ? \"\" : state.query,\n    empty: clearQuery ? false : state.empty\n  }));\n}\nconst spotlightActions = {\n  open: openSpotlightAction,\n  close: closeSpotlightAction,\n  toggle: toggleSpotlightAction,\n  updateState: updateSpotlightStateAction,\n  setSelectedAction,\n  setListId,\n  selectAction,\n  selectNextAction,\n  selectPreviousAction,\n  triggerSelectedAction,\n  registerAction,\n  setQuery,\n  clearSpotlightState\n};\nfunction createSpotlight() {\n  const store = createSpotlightStore();\n  const actions = {\n    open: () => openSpotlightAction(store),\n    close: () => closeSpotlightAction(store),\n    toggle: () => toggleSpotlightAction(store)\n  };\n  return [store, actions];\n}\nconst [spotlightStore, spotlight] = createSpotlight();\nconst { open: openSpotlight, close: closeSpotlight, toggle: toggleSpotlight } = spotlight;\n\nexport { clearSpotlightState, closeSpotlight, closeSpotlightAction, createSpotlight, createSpotlightStore, openSpotlight, openSpotlightAction, registerAction, selectAction, selectNextAction, selectPreviousAction, setListId, setQuery, setSelectedAction, spotlight, spotlightActions, spotlightStore, toggleSpotlight, toggleSpotlightAction, triggerSelectedAction, updateSpotlightStateAction, useSpotlight };\n//# sourceMappingURL=spotlight.store.mjs.map\n","'use client';\nfunction isActionsGroup(item) {\n  const _item = item;\n  return _item.group !== void 0 && Array.isArray(_item.actions);\n}\n\nexport { isActionsGroup };\n//# sourceMappingURL=is-actions-group.mjs.map\n","'use client';\nfunction getKeywords(keywords) {\n  if (Array.isArray(keywords)) {\n    return keywords.map((keyword) => keyword.trim()).join(\",\").toLowerCase().trim();\n  }\n  if (typeof keywords === \"string\") {\n    return keywords.toLowerCase().trim();\n  }\n  return \"\";\n}\nfunction getFlatActions(data) {\n  return data.reduce((acc, item) => {\n    if (\"actions\" in item) {\n      return [...acc, ...item.actions.map((action) => ({ ...action, group: item.group }))];\n    }\n    return [...acc, item];\n  }, []);\n}\nfunction flatActionsToGroups(data) {\n  const groups = {};\n  const result = [];\n  data.forEach((action) => {\n    if (action.group) {\n      if (!groups[action.group]) {\n        groups[action.group] = { pushed: false, data: { group: action.group, actions: [] } };\n      }\n      groups[action.group].data.actions.push(action);\n      if (!groups[action.group].pushed) {\n        groups[action.group].pushed = true;\n        result.push(groups[action.group].data);\n      }\n    } else {\n      result.push(action);\n    }\n  });\n  return result;\n}\nconst defaultSpotlightFilter = (_query, data) => {\n  const query = _query.trim().toLowerCase();\n  const priorityMatrix = [[], []];\n  const flatActions = getFlatActions(data);\n  flatActions.forEach((item) => {\n    if (item.label?.toLowerCase().includes(query)) {\n      priorityMatrix[0].push(item);\n    } else if (item.description?.toLowerCase().includes(query) || getKeywords(item.keywords).includes(query)) {\n      priorityMatrix[1].push(item);\n    }\n  });\n  return flatActionsToGroups(priorityMatrix.flat());\n};\n\nexport { defaultSpotlightFilter };\n//# sourceMappingURL=default-spotlight-filter.mjs.map\n","'use client';\nimport { isActionsGroup } from './is-actions-group.mjs';\n\nfunction limitActions(actions, limit) {\n  if (!Array.isArray(actions)) {\n    return [];\n  }\n  let count = 0;\n  return actions.reduce((acc, item) => {\n    if (count >= limit) {\n      return acc;\n    }\n    if (isActionsGroup(item)) {\n      const groupActions = limitActions(item.actions, limit - count);\n      acc.push({\n        group: item.group,\n        actions: groupActions\n      });\n      count += groupActions.length;\n    } else {\n      acc.push(item);\n      count += 1;\n    }\n    return acc;\n  }, []);\n}\n\nexport { limitActions };\n//# sourceMappingURL=limit-actions.mjs.map\n","'use client';\nimport { createSafeContext } from '@mantine/core';\n\nconst [SpotlightProvider, useSpotlightContext] = createSafeContext(\n  \"Spotlight component was not found in tree\"\n);\n\nexport { SpotlightProvider, useSpotlightContext };\n//# sourceMappingURL=Spotlight.context.mjs.map\n","'use client';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { factory, useProps, Highlight, UnstyledButton, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  dimmedSections: true,\n  highlightQuery: false\n};\nconst SpotlightAction = factory((_props, ref) => {\n  const props = useProps(\"SpotlightAction\", defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    id,\n    description,\n    label,\n    leftSection,\n    rightSection,\n    children,\n    dimmedSections,\n    highlightQuery,\n    highlightColor,\n    closeSpotlightOnTrigger,\n    onClick,\n    onMouseDown,\n    keywords,\n    vars,\n    ...others\n  } = props;\n  const ctx = useSpotlightContext();\n  const stylesApi = { classNames, styles };\n  const labelNode = highlightQuery && typeof label === \"string\" ? /* @__PURE__ */ jsx(\n    Highlight,\n    {\n      component: \"span\",\n      highlight: ctx.query,\n      color: highlightColor,\n      ...ctx.getStyles(\"actionLabel\", stylesApi),\n      children: label\n    }\n  ) : /* @__PURE__ */ jsx(\"span\", { ...ctx.getStyles(\"actionLabel\", stylesApi), children: label });\n  return /* @__PURE__ */ jsx(\n    UnstyledButton,\n    {\n      ref,\n      \"data-action\": true,\n      ...ctx.getStyles(\"action\", { className, style, ...stylesApi }),\n      ...others,\n      onMouseDown: (event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      },\n      onClick: (event) => {\n        onClick?.(event);\n        if (closeSpotlightOnTrigger ?? ctx.closeOnActionTrigger) {\n          spotlightActions.close(ctx.store);\n        }\n      },\n      tabIndex: -1,\n      children: children || /* @__PURE__ */ jsxs(Fragment, { children: [\n        leftSection && /* @__PURE__ */ jsx(\n          Box,\n          {\n            component: \"span\",\n            mod: { position: \"left\", dimmed: dimmedSections },\n            ...ctx.getStyles(\"actionSection\", stylesApi),\n            children: leftSection\n          }\n        ),\n        /* @__PURE__ */ jsxs(\"span\", { ...ctx.getStyles(\"actionBody\", stylesApi), children: [\n          labelNode,\n          /* @__PURE__ */ jsx(\"span\", { ...ctx.getStyles(\"actionDescription\", stylesApi), children: description })\n        ] }),\n        rightSection && /* @__PURE__ */ jsx(\n          Box,\n          {\n            component: \"span\",\n            mod: { position: \"right\", dimmed: dimmedSections },\n            ...ctx.getStyles(\"actionSection\", stylesApi),\n            children: rightSection\n          }\n        )\n      ] })\n    }\n  );\n});\nSpotlightAction.classes = classes;\nSpotlightAction.displayName = \"@mantine/spotlight/SpotlightAction\";\n\nexport { SpotlightAction };\n//# sourceMappingURL=SpotlightAction.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {};\nconst SpotlightActionsGroup = factory((props, ref) => {\n  const { className, style, styles, classNames, label, children, ...others } = useProps(\n    \"SpotlightActionsGroup\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ...ctx.getStyles(\"actionsGroup\", { className, style, classNames, styles }),\n      ref,\n      ...others,\n      __vars: { \"--spotlight-label\": `'${label}'` },\n      children\n    }\n  );\n});\nSpotlightActionsGroup.classes = classes;\nSpotlightActionsGroup.displayName = \"@mantine/core/SpotlightActionsGroup\";\n\nexport { SpotlightActionsGroup };\n//# sourceMappingURL=SpotlightActionsGroup.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useEffect } from 'react';\nimport { factory, useProps, ScrollArea } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {};\nconst SpotlightActionsList = factory((props, ref) => {\n  const { className, style, id, children, vars, classNames, styles, ...others } = useProps(\n    \"SpotlightActionsList\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  const generatedId = `mantine-${useId().replace(/:/g, \"\")}`;\n  const listId = id || generatedId;\n  useEffect(() => {\n    spotlightActions.setListId(listId, ctx.store);\n    return () => spotlightActions.setListId(\"\", ctx.store);\n  }, []);\n  return /* @__PURE__ */ jsx(\n    ScrollArea.Autosize,\n    {\n      ...ctx.getStyles(\"actionsList\", { className, style, classNames, styles }),\n      ref,\n      type: \"scroll\",\n      scrollbarSize: \"var(--spotlight-actions-list-padding)\",\n      offsetScrollbars: \"y\",\n      id: listId,\n      ...others,\n      children\n    }\n  );\n});\nSpotlightActionsList.classes = classes;\nSpotlightActionsList.displayName = \"@mantine/spotlight/SpotlightActionsList\";\n\nexport { SpotlightActionsList };\n//# sourceMappingURL=SpotlightActionsList.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {};\nconst SpotlightEmpty = factory((props, ref) => {\n  const { className, style, classNames, styles, ...others } = useProps(\n    \"SpotlightEmpty\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      ...ctx.getStyles(\"empty\", { classNames, styles, className, style }),\n      ...others\n    }\n  );\n});\nSpotlightEmpty.classes = classes;\nSpotlightEmpty.displayName = \"@mantine/spotlight/SpotlightEmpty\";\n\nexport { SpotlightEmpty };\n//# sourceMappingURL=SpotlightEmpty.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {};\nconst SpotlightFooter = factory((props, ref) => {\n  const { className, style, classNames, styles, ...others } = useProps(\n    \"SpotlightFooter\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      ...ctx.getStyles(\"footer\", { className, classNames, style, styles }),\n      ...others\n    }\n  );\n});\nSpotlightFooter.classes = classes;\nSpotlightFooter.displayName = \"@mantine/spotlight/SpotlightFooter\";\n\nexport { SpotlightFooter };\n//# sourceMappingURL=SpotlightFooter.mjs.map\n","'use client';\nimport { spotlightActions } from './spotlight.store.mjs';\n\nfunction getHotkeys(hotkeys, store) {\n  if (!hotkeys) {\n    return [];\n  }\n  const open = () => spotlightActions.open(store);\n  if (Array.isArray(hotkeys)) {\n    return hotkeys.map((hotkey) => [hotkey, open]);\n  }\n  return [[hotkeys, open]];\n}\n\nexport { getHotkeys };\n//# sourceMappingURL=get-hotkeys.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { getDefaultZIndex, factory, useProps, useMantineTheme, useStyles, Modal, resolveClassNames, resolveStyles, rem } from '@mantine/core';\nimport { useHotkeys, useDidUpdate } from '@mantine/hooks';\nimport { getHotkeys } from './get-hotkeys.mjs';\nimport { SpotlightProvider } from './Spotlight.context.mjs';\nimport { spotlightStore, useSpotlight, spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: 600,\n  yOffset: 80,\n  zIndex: getDefaultZIndex(\"max\"),\n  overlayProps: { backgroundOpacity: 0.35, blur: 7 },\n  transitionProps: { duration: 200, transition: \"pop\" },\n  store: spotlightStore,\n  clearQueryOnClose: true,\n  closeOnActionTrigger: true,\n  shortcut: \"mod + K\",\n  maxHeight: 400,\n  scrollable: false\n};\nconst SpotlightRoot = factory((_props, ref) => {\n  const props = useProps(\"SpotlightRoot\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    store,\n    children,\n    query,\n    onQueryChange,\n    transitionProps,\n    clearQueryOnClose,\n    shortcut,\n    tagsToIgnore,\n    triggerOnContentEditable,\n    disabled,\n    onSpotlightOpen,\n    onSpotlightClose,\n    forceOpened,\n    closeOnActionTrigger,\n    maxHeight,\n    scrollable,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const { opened, query: storeQuery } = useSpotlight(store);\n  const _query = query || storeQuery;\n  const setQuery = (q) => {\n    onQueryChange?.(q);\n    spotlightActions.setQuery(q, store);\n  };\n  const getStyles = useStyles({\n    name: \"Spotlight\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled\n  });\n  useHotkeys(getHotkeys(shortcut, store), tagsToIgnore, triggerOnContentEditable);\n  useDidUpdate(() => {\n    opened ? onSpotlightOpen?.() : onSpotlightClose?.();\n  }, [opened]);\n  if (disabled) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\n    SpotlightProvider,\n    {\n      value: {\n        getStyles,\n        query: _query,\n        setQuery,\n        store,\n        closeOnActionTrigger\n      },\n      children: /* @__PURE__ */ jsx(\n        Modal,\n        {\n          ref,\n          ...others,\n          withCloseButton: false,\n          opened: opened || !!forceOpened,\n          padding: 0,\n          onClose: () => spotlightActions.close(store),\n          className,\n          style,\n          classNames: resolveClassNames({\n            theme,\n            classNames: [classes, classNames],\n            props,\n            stylesCtx: void 0\n          }),\n          styles: resolveStyles({ theme, styles, props, stylesCtx: void 0 }),\n          transitionProps: {\n            ...transitionProps,\n            onExited: () => {\n              clearQueryOnClose && setQuery(\"\");\n              spotlightActions.clearSpotlightState({ clearQuery: clearQueryOnClose }, store);\n              transitionProps?.onExited?.();\n            }\n          },\n          __vars: { \"--spotlight-max-height\": scrollable ? rem(maxHeight) : void 0 },\n          __staticSelector: \"Spotlight\",\n          \"data-scrollable\": scrollable || void 0,\n          children\n        }\n      )\n    }\n  );\n});\nSpotlightRoot.classes = classes;\nSpotlightRoot.displayName = \"@mantine/spotlight/SpotlightRoot\";\n\nexport { SpotlightRoot };\n//# sourceMappingURL=SpotlightRoot.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { factory, useProps, Input } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: \"lg\"\n};\nconst SpotlightSearch = factory((props, ref) => {\n  const { classNames, styles, onKeyDown, onChange, vars, value, ...others } = useProps(\n    \"SpotlightSearch\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  const inputStyles = ctx.getStyles(\"search\");\n  const [isComposing, setIsComposing] = useState(false);\n  const handleKeyDown = (event) => {\n    onKeyDown?.(event);\n    if (isComposing) {\n      return;\n    }\n    if (event.nativeEvent.code === \"ArrowDown\") {\n      event.preventDefault();\n      spotlightActions.selectNextAction(ctx.store);\n    }\n    if (event.nativeEvent.code === \"ArrowUp\") {\n      event.preventDefault();\n      spotlightActions.selectPreviousAction(ctx.store);\n    }\n    if (event.nativeEvent.code === \"Enter\" || event.nativeEvent.code === \"NumpadEnter\") {\n      event.preventDefault();\n      spotlightActions.triggerSelectedAction(ctx.store);\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    Input,\n    {\n      ref,\n      classNames: [{ input: inputStyles.className }, classNames],\n      styles: [{ input: inputStyles.style }, styles],\n      ...others,\n      value: value ?? ctx.query,\n      onChange: (event) => {\n        ctx.setQuery(event.currentTarget.value);\n        onChange?.(event);\n      },\n      onKeyDown: handleKeyDown,\n      onCompositionStart: () => setIsComposing(true),\n      onCompositionEnd: () => setIsComposing(false)\n    }\n  );\n});\nSpotlightSearch.classes = classes;\nSpotlightSearch.displayName = \"@mantine/spotlight/SpotlightSearch\";\n\nexport { SpotlightSearch };\n//# sourceMappingURL=SpotlightSearch.mjs.map\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { getDefaultZIndex, factory, useProps } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { defaultSpotlightFilter } from './default-spotlight-filter.mjs';\nimport { isActionsGroup } from './is-actions-group.mjs';\nimport { limitActions } from './limit-actions.mjs';\nimport { spotlightStore, spotlight } from './spotlight.store.mjs';\nimport { SpotlightAction } from './SpotlightAction.mjs';\nimport { SpotlightActionsGroup } from './SpotlightActionsGroup.mjs';\nimport { SpotlightActionsList } from './SpotlightActionsList.mjs';\nimport { SpotlightEmpty } from './SpotlightEmpty.mjs';\nimport { SpotlightFooter } from './SpotlightFooter.mjs';\nimport { SpotlightRoot } from './SpotlightRoot.mjs';\nimport { SpotlightSearch } from './SpotlightSearch.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: 600,\n  yOffset: 80,\n  limit: Infinity,\n  zIndex: getDefaultZIndex(\"max\"),\n  overlayProps: { backgroundOpacity: 0.35, blur: 7 },\n  transitionProps: { duration: 200, transition: \"pop\" },\n  store: spotlightStore,\n  filter: defaultSpotlightFilter,\n  clearQueryOnClose: true,\n  closeOnActionTrigger: true,\n  shortcut: \"mod + K\",\n  highlightQuery: false\n};\nconst Spotlight = factory((_props, ref) => {\n  const props = useProps(\"Spotlight\", defaultProps, _props);\n  const {\n    searchProps,\n    filter,\n    query,\n    onQueryChange,\n    actions,\n    nothingFound,\n    highlightQuery,\n    limit,\n    ...others\n  } = props;\n  const [_query, setQuery] = useUncontrolled({\n    value: query,\n    defaultValue: \"\",\n    finalValue: \"\",\n    onChange: onQueryChange\n  });\n  const filteredActions = limitActions(filter(_query, actions), limit).map((item) => {\n    if (isActionsGroup(item)) {\n      const items = item.actions.map(({ id, ...actionData }) => /* @__PURE__ */ jsx(SpotlightAction, { highlightQuery, ...actionData }, id));\n      return /* @__PURE__ */ jsx(SpotlightActionsGroup, { label: item.group, children: items }, item.group);\n    }\n    return /* @__PURE__ */ jsx(SpotlightAction, { highlightQuery, ...item }, item.id);\n  });\n  return /* @__PURE__ */ jsxs(SpotlightRoot, { ...others, query: _query, onQueryChange: setQuery, ref, children: [\n    /* @__PURE__ */ jsx(SpotlightSearch, { ...searchProps }),\n    /* @__PURE__ */ jsxs(SpotlightActionsList, { children: [\n      filteredActions,\n      filteredActions.length === 0 && nothingFound && /* @__PURE__ */ jsx(SpotlightEmpty, { children: nothingFound })\n    ] })\n  ] });\n});\nSpotlight.classes = classes;\nSpotlight.displayName = \"@mantine/spotlight/Spotlight\";\nSpotlight.Search = SpotlightSearch;\nSpotlight.ActionsList = SpotlightActionsList;\nSpotlight.Action = SpotlightAction;\nSpotlight.Empty = SpotlightEmpty;\nSpotlight.ActionsGroup = SpotlightActionsGroup;\nSpotlight.Footer = SpotlightFooter;\nSpotlight.Root = SpotlightRoot;\nSpotlight.open = spotlight.open;\nSpotlight.close = spotlight.close;\nSpotlight.toggle = spotlight.toggle;\n\nexport { Spotlight };\n//# sourceMappingURL=Spotlight.mjs.map\n","import { t } from '@lingui/core/macro';\nimport type { SpotlightActionData } from '@mantine/spotlight';\nimport { IconBarcode, IconLink, IconPointer } from '@tabler/icons-react';\nimport type { NavigateFunction } from 'react-router-dom';\n\nimport { openContextModal } from '@mantine/modals';\nimport { useShallow } from 'zustand/react/shallow';\nimport { useLocalState } from '../states/LocalState';\nimport { useUserState } from '../states/UserState';\nimport { aboutInvenTree, docLinks, licenseInfo, serverInfo } from './links';\n\nexport function openQrModal(navigate: NavigateFunction) {\n  return openContextModal({\n    modal: 'qr',\n    innerProps: { navigate: navigate }\n  });\n}\n\nexport function getActions(navigate: NavigateFunction) {\n  const setNavigationOpen = useLocalState(\n    useShallow((state) => state.setNavigationOpen)\n  );\n  const { user } = useUserState();\n\n  const actions: SpotlightActionData[] = [\n    {\n      id: 'dashboard',\n      label: t`Dashboard`,\n      description: t`Go to the InvenTree dashboard`,\n      onClick: () => {}, // navigate(menuItems.dashboard.link),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'documentation',\n      label: t`Documentation`,\n      description: t`Visit the documentation to learn more about InvenTree`,\n      onClick: () => {\n        window.location.href = docLinks.faq;\n      },\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'about',\n      label: t`About InvenTree`,\n      description: t`About the InvenTree org`,\n      onClick: () => aboutInvenTree(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'server-info',\n      label: t`Server Information`,\n      description: t`About this InvenTree instance`,\n      onClick: () => serverInfo(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'license-info',\n      label: t`License Information`,\n      description: t`Licenses for dependencies of the service`,\n      onClick: () => licenseInfo(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'navigation',\n      label: t`Open Navigation`,\n      description: t`Open the main navigation menu`,\n      onClick: () => setNavigationOpen(true),\n      leftSection: <IconPointer size='1.2rem' />\n    },\n    {\n      id: 'scan',\n      label: t`Scan`,\n      description: t`Scan a barcode or QR code`,\n      onClick: () => openQrModal(navigate),\n      leftSection: <IconBarcode size='1.2rem' />\n    }\n  ];\n\n  // Staff actions\n  user?.is_staff &&\n    actions.push({\n      id: 'admin-center',\n      label: t`Admin Center`,\n      description: t`Go to the Admin Center`,\n      onClick: () => {}, /// navigate(menuItems['settings-admin'].link),}\n      leftSection: <IconLink size='1.2rem' />\n    });\n\n  return actions;\n}\n","import * as classes from '../../main.css';\n\nexport function Footer() {\n  return (\n    <div className={classes.layoutFooter}>\n      {\n        // Placeholder for footer links\n      }\n    </div>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { ActionIcon, Tooltip } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { IconQrcode } from '@tabler/icons-react';\nimport BarcodeScanDialog from '../barcodes/BarcodeScanDialog';\n\n/**\n * A button which opens the QR code scanner modal\n */\nexport function ScanButton() {\n  const [opened, { open, close }] = useDisclosure(false);\n\n  return (\n    <>\n      <Tooltip position='bottom-end' label={t`Scan Barcode`}>\n        <ActionIcon\n          onClick={open}\n          variant='transparent'\n          title={t`Open Barcode Scanner`}\n        >\n          <IconQrcode />\n        </ActionIcon>\n      </Tooltip>\n      <BarcodeScanDialog opened={opened} onClose={close} />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { ActionIcon, Tooltip } from '@mantine/core';\nimport { IconCommand } from '@tabler/icons-react';\n\nimport { firstSpotlight } from '../nav/Layout';\n\n/**\n * A button which opens the quick command modal\n */\nexport function SpotlightButton() {\n  return (\n    <Tooltip position='bottom-end' label={t`Open spotlight`}>\n      <ActionIcon\n        onClick={() => firstSpotlight.open()}\n        variant='transparent'\n        aria-label='open-spotlight'\n      >\n        <IconCommand />\n      </ActionIcon>\n    </Tooltip>\n  );\n}\n","import { Trans } from '@lingui/react/macro';\nimport {\n  Group,\n  Menu,\n  Skeleton,\n  Text,\n  UnstyledButton,\n  useMantineColorScheme\n} from '@mantine/core';\nimport {\n  IconChevronDown,\n  IconLogout,\n  IconMoonStars,\n  IconSettings,\n  IconSun,\n  IconUserBolt,\n  IconUserCog\n} from '@tabler/icons-react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { useShallow } from 'zustand/react/shallow';\nimport { doLogout } from '../../functions/auth';\nimport * as classes from '../../main.css';\nimport { useUserState } from '../../states/UserState';\nimport { vars } from '../../theme';\n\nexport function MainMenu() {\n  const navigate = useNavigate();\n  const [user, username] = useUserState(\n    useShallow((state) => [state.user, state.username])\n  );\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n\n  return (\n    <Menu width={260} position='bottom-end'>\n      <Menu.Target>\n        <UnstyledButton className={classes.layoutHeaderUser}>\n          <Group gap={7}>\n            {username() ? (\n              <Text fw={500} size='sm' style={{ lineHeight: 1 }} mr={3}>\n                {username()}\n              </Text>\n            ) : (\n              <Skeleton height={20} width={40} radius={vars.radiusDefault} />\n            )}\n            <IconChevronDown />\n          </Group>\n        </UnstyledButton>\n      </Menu.Target>\n      <Menu.Dropdown>\n        <Menu.Label>\n          <Trans>Settings</Trans>\n        </Menu.Label>\n        <Menu.Item\n          leftSection={<IconUserCog />}\n          component={Link}\n          to='/settings/user'\n        >\n          <Trans>Account Settings</Trans>\n        </Menu.Item>\n        {user?.is_staff && (\n          <Menu.Item\n            leftSection={<IconSettings />}\n            component={Link}\n            to='/settings/system'\n          >\n            <Trans>System Settings</Trans>\n          </Menu.Item>\n        )}\n        {user?.is_staff && (\n          <Menu.Item\n            leftSection={<IconUserBolt />}\n            component={Link}\n            to='/settings/admin'\n          >\n            <Trans>Admin Center</Trans>\n          </Menu.Item>\n        )}\n        {user?.is_staff && <Menu.Divider />}\n        <Menu.Item\n          onClick={toggleColorScheme}\n          leftSection={colorScheme === 'dark' ? <IconSun /> : <IconMoonStars />}\n          c={\n            colorScheme === 'dark' ? vars.colors.yellow[4] : vars.colors.blue[6]\n          }\n        >\n          <Trans>Change Color Mode</Trans>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item\n          leftSection={<IconLogout />}\n          onClick={() => {\n            doLogout(navigate);\n          }}\n        >\n          <Trans>Logout</Trans>\n        </Menu.Item>\n      </Menu.Dropdown>\n    </Menu>\n  );\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'%3e%3cg%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.676'%3e%3cpath%20fill='%23ddbc91'%20d='M200%20199.906v193.196l166.305-96.016V103.139Z'/%3e%3cpath%20fill='%23d9b383'%20d='M200%20199.906v193.196L33.695%20297.086V103.139Z'/%3e%3cpath%20fill='%23ddbc91'%20d='M366.305%20103.139%20200%20199.906%2033.695%20103.14%20200%206.899z'/%3e%3cg%20fill='%23f3f4e4'%3e%3cpath%20d='M75.27%20127.109v145.46L200%20344.583l124.73-72.012V127.109L200%20199.684Z'/%3e%3cpath%20d='M324.73%20127.11%20200%20199.684%2075.27%20127.109%20200%2054.93Z'/%3e%3c/g%3e%3cpath%20fill='%23d9dbbc'%20d='M200%2054.929v144.756L75.27%20272.569V127.11z'/%3e%3cpath%20fill='%23eaeccf'%20d='M200%2054.929v144.756l124.73%2072.884V127.11z'/%3e%3cpath%20fill='%2390a8d8'%20d='M200%20199.901V296.5l83.153-48.008v-96.973zm0%200V296.5l-83.153-48.008v-96.973zm83.153-48.383L200%20199.9l-83.153-48.383L200%20103.398Z'/%3e%3c/g%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%3e%3cpath%20d='M-546.667%20443.959v216.54l186.4-107.618V335.499Zm0%200v216.54l-186.4-107.618V335.499Z'/%3e%3cpath%20d='m-360.266%20335.499-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3c/g%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%3e%3cpath%20d='M-546.667%20227.419v216.54l186.4-107.619V118.96Zm0%200v216.54l-186.4-107.619V118.96Z'/%3e%3cpath%20d='m-360.266%20118.959-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3c/g%3e%3cpath%20fill='%23ddbc91'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667%2010.879v216.54l186.4-107.619V-97.58Z'/%3e%3cpath%20fill='%23d9b383'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.676'%20d='M-546.667%2010.879v216.54l-186.4-107.619V-97.58Z'/%3e%3cpath%20fill='%23ddbc91'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='m-360.266-97.581-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3cg%20fill='%23f3f4e4'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='1.058'%3e%3cpath%20stroke-width='3'%20d='M-686.466-70.715V92.321l139.798%2080.714%20139.801-80.714V-70.715l-139.8%2081.346z'/%3e%3cpath%20stroke-width='2.999'%20d='m-406.866-70.715-139.8%2081.345-139.801-81.345%20139.8-80.902Z'/%3e%3c/g%3e%3cpath%20fill='%23d9dbbc'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667-151.617V10.63l-139.8%2081.692V-70.715z'/%3e%3cpath%20fill='%23eaeccf'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667-151.617V10.63l139.8%2081.692V-70.715z'/%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.999'%3e%3cpath%20d='M-546.667%2010.873v108.27l93.2-53.81v-108.69zm0%200v108.27l-93.2-53.81v-108.69z'/%3e%3cpath%20d='m-453.466-43.357-93.2%2054.23-93.201-54.23%2093.2-53.935Z'/%3e%3c/g%3e%3cpath%20fill='none'%20d='M-787.948-253.366h482.56v946.733h-482.56z'/%3e%3c/svg%3e\"","import { t } from '@lingui/core/macro';\nimport { ActionIcon } from '@mantine/core';\nimport { forwardRef } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport InvenTreeIcon from './inventree.svg';\n\nexport const InvenTreeLogoHomeButton = forwardRef<HTMLDivElement>(\n  (props, ref) => {\n    return (\n      <div ref={ref} {...props}>\n        <NavLink to={'/'}>\n          <ActionIcon size={28} variant='transparent'>\n            <InvenTreeLogo />\n          </ActionIcon>\n        </NavLink>\n      </div>\n    );\n  }\n);\n\nexport const InvenTreeLogo = () => {\n  return <img src={InvenTreeIcon} alt={t`InvenTree Logo`} height={28} />;\n};\n","import { UnstyledButton } from '@mantine/core';\n\nimport { InvenTreeLogo } from '../items/InvenTreeLogo';\n\nexport function NavHoverMenu({\n  openDrawer\n}: Readonly<{\n  openDrawer: () => void;\n}>) {\n  return (\n    <UnstyledButton onClick={() => openDrawer()} aria-label='navigation-menu'>\n      <InvenTreeLogo />\n    </UnstyledButton>\n  );\n}\n","import {\n  Anchor,\n  Divider,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Tooltip,\n  UnstyledButton\n} from '@mantine/core';\nimport { type JSX, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport type { InvenTreeIconType } from '@lib/types/Icons';\nimport { InvenTreeIcon } from '../../functions/icons';\nimport { StylishText } from './StylishText';\n\nexport interface MenuLinkItem {\n  id: string;\n  title: string | JSX.Element;\n  description?: string;\n  icon?: keyof InvenTreeIconType;\n  action?: () => void;\n  link?: string;\n  external?: boolean;\n  hidden?: boolean;\n}\n\nexport function MenuLinks({\n  title,\n  links,\n  beforeClick\n}: Readonly<{\n  title: string;\n  links: MenuLinkItem[];\n  beforeClick?: () => void;\n}>) {\n  const navigate = useNavigate();\n\n  // Filter out any hidden links\n  const visibleLinks = useMemo(\n    () => links.filter((item) => !item.hidden),\n    [links]\n  );\n\n  if (visibleLinks.length == 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <Stack gap='xs'>\n        <Divider />\n        <StylishText size='md'>{title}</StylishText>\n        <Divider />\n        <SimpleGrid\n          cols={{ base: 1, '400px': 2 }}\n          type='container'\n          spacing={0}\n          p={3}\n        >\n          {visibleLinks.map((item) => (\n            <Tooltip\n              key={`menu-link-tooltip-${item.id}`}\n              label={item.description}\n              hidden={!item.description}\n            >\n              {item.link && item.external ? (\n                <Anchor href={item.link}>\n                  <Group wrap='nowrap'>\n                    {item.external && (\n                      <InvenTreeIcon\n                        icon={item.icon ?? 'link'}\n                        iconProps={{ size: '14' }}\n                      />\n                    )}\n                    <Text fw={500} p={5}>\n                      {item.title}\n                    </Text>\n                  </Group>\n                </Anchor>\n              ) : (\n                <UnstyledButton\n                  onClick={(event) => {\n                    if (item.link) {\n                      beforeClick?.();\n                      navigateToLink(item.link, navigate, event);\n                    } else if (item.action) {\n                      beforeClick?.();\n                      item.action();\n                    }\n                  }}\n                >\n                  <Group wrap='nowrap'>\n                    {item.icon && (\n                      <InvenTreeIcon\n                        icon={item.icon}\n                        iconProps={{ size: '14' }}\n                      />\n                    )}\n                    <Text fw={500} p={5}>\n                      {item.title}\n                    </Text>\n                  </Group>\n                </UnstyledButton>\n              )}\n            </Tooltip>\n          ))}\n        </SimpleGrid>\n      </Stack>\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport {\n  Container,\n  Drawer,\n  Flex,\n  Group,\n  ScrollArea,\n  Space\n} from '@mantine/core';\nimport { useViewportSize } from '@mantine/hooks';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { AboutLinks, DocumentationLinks } from '../../defaults/links';\nimport useInstanceName from '../../hooks/UseInstanceName';\nimport * as classes from '../../main.css';\nimport { useGlobalSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { InvenTreeLogo } from '../items/InvenTreeLogo';\nimport { type MenuLinkItem, MenuLinks } from '../items/MenuLinks';\nimport { StylishText } from '../items/StylishText';\n\n// TODO @matmair #1: implement plugin loading and menu item generation see #5269\nconst plugins: MenuLinkItem[] = [];\n\nexport function NavigationDrawer({\n  opened,\n  close\n}: Readonly<{\n  opened: boolean;\n  close: () => void;\n}>) {\n  return (\n    <Drawer\n      opened={opened}\n      onClose={close}\n      size='lg'\n      withCloseButton={false}\n      classNames={{\n        body: classes.navigationDrawer\n      }}\n    >\n      <DrawerContent closeFunc={close} />\n    </Drawer>\n  );\n}\n\nfunction DrawerContent({ closeFunc }: Readonly<{ closeFunc?: () => void }>) {\n  const user = useUserState();\n\n  const globalSettings = useGlobalSettingsState();\n\n  const [scrollHeight, setScrollHeight] = useState(0);\n  const ref = useRef(null);\n  const { height } = useViewportSize();\n\n  const title = useInstanceName();\n\n  // update scroll height when viewport size changes\n  useEffect(() => {\n    if (ref.current == null) return;\n    setScrollHeight(height - ref.current['clientHeight'] - 65);\n  });\n\n  // Construct menu items\n  const menuItemsNavigate: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'home',\n        title: t`Dashboard`,\n        link: '/',\n        icon: 'dashboard'\n      },\n      {\n        id: 'parts',\n        title: t`Parts`,\n        hidden: !user.hasViewPermission(ModelType.part),\n        link: '/part',\n        icon: 'part'\n      },\n      {\n        id: 'stock',\n        title: t`Stock`,\n        link: '/stock',\n        hidden: !user.hasViewPermission(ModelType.stockitem),\n        icon: 'stock'\n      },\n      {\n        id: 'build',\n        title: t`Manufacturing`,\n        link: '/manufacturing/',\n        hidden: !user.hasViewRole(UserRoles.build),\n        icon: 'build'\n      },\n      {\n        id: 'purchasing',\n        title: t`Purchasing`,\n        link: '/purchasing/',\n        hidden: !user.hasViewRole(UserRoles.purchase_order),\n        icon: 'purchase_orders'\n      },\n      {\n        id: 'sales',\n        title: t`Sales`,\n        link: '/sales/',\n        hidden: !user.hasViewRole(UserRoles.sales_order),\n        icon: 'sales_orders'\n      },\n      {\n        id: 'users',\n        title: t`Users`,\n        link: '/core/index/users',\n        icon: 'user'\n      },\n      {\n        id: 'groups',\n        title: t`Groups`,\n        link: '/core/index/groups',\n        icon: 'group'\n      }\n    ];\n  }, [user]);\n\n  const menuItemsAction: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'barcode',\n        title: t`Scan Barcode`,\n        link: '/scan',\n        icon: 'barcode',\n        hidden: !globalSettings.isSet('BARCODE_ENABLE')\n      }\n    ];\n  }, [user, globalSettings]);\n\n  const menuItemsSettings: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'notifications',\n        title: t`Notifications`,\n        link: '/notifications',\n        icon: 'notification'\n      },\n      {\n        id: 'user-settings',\n        title: t`User Settings`,\n        link: '/settings/user',\n        icon: 'user'\n      },\n      {\n        id: 'system-settings',\n        title: t`System Settings`,\n        link: '/settings/system',\n        icon: 'system',\n        hidden: !user.isStaff()\n      },\n      {\n        id: 'admin-center',\n        title: t`Admin Center`,\n        link: '/settings/admin',\n        icon: 'admin',\n        hidden: !user.isStaff()\n      }\n    ];\n  }, [user]);\n\n  const menuItemsDocumentation: MenuLinkItem[] = useMemo(\n    () => DocumentationLinks(),\n    []\n  );\n\n  const menuItemsAbout: MenuLinkItem[] = useMemo(\n    () => AboutLinks(globalSettings, user),\n    []\n  );\n\n  return (\n    <Flex direction='column' mih='100vh' p={16}>\n      <Group wrap='nowrap'>\n        <InvenTreeLogo />\n        <StylishText size='xl'>{title}</StylishText>\n      </Group>\n      <Space h='xs' />\n      <Container className={classes.layoutContent} p={0}>\n        <ScrollArea h={scrollHeight} type='always' offsetScrollbars>\n          <MenuLinks\n            title={t`Navigation`}\n            links={menuItemsNavigate}\n            beforeClick={closeFunc}\n          />\n          <MenuLinks\n            title={t`Settings`}\n            links={menuItemsSettings}\n            beforeClick={closeFunc}\n          />\n          <MenuLinks\n            title={t`Actions`}\n            links={menuItemsAction}\n            beforeClick={closeFunc}\n          />\n          <Space h='md' />\n          {plugins.length > 0 ? (\n            <MenuLinks\n              title={t`Plugins`}\n              links={plugins}\n              beforeClick={closeFunc}\n            />\n          ) : (\n            <></>\n          )}\n        </ScrollArea>\n      </Container>\n      <div ref={ref}>\n        <Space h='md' />\n        <MenuLinks\n          title={t`Documentation`}\n          links={menuItemsDocumentation}\n          beforeClick={closeFunc}\n        />\n        <Space h='md' />\n        <MenuLinks\n          title={t`About`}\n          links={menuItemsAbout}\n          beforeClick={closeFunc}\n        />\n      </div>\n    </Flex>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport {\n  ActionIcon,\n  Alert,\n  Anchor,\n  Center,\n  Divider,\n  Drawer,\n  Group,\n  Loader,\n  Paper,\n  Stack,\n  Text,\n  Tooltip\n} from '@mantine/core';\nimport {\n  IconArrowRight,\n  IconBellCheck,\n  IconCircleCheck,\n  IconExclamationCircle\n} from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelInformationDict } from '@lib/enums/ModelInformation';\nimport type { ModelType } from '@lib/enums/ModelType';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getDetailUrl } from '@lib/functions/Navigation';\nimport { getBaseUrl } from '@lib/functions/Navigation';\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport { api } from '../../App';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { StylishText } from '../items/StylishText';\n\n/**\n * Render a single notification entry in the drawer\n */\nfunction NotificationEntry({\n  notification,\n  onRead\n}: Readonly<{\n  notification: any;\n  onRead: () => void;\n}>) {\n  const navigate = useNavigate();\n\n  let link = notification.target?.link;\n\n  const model_type = notification.target?.model_type;\n  const model_id = notification.target?.model_id;\n\n  // If a valid model type is provided, that overrides the specified link\n  if (model_type as ModelType) {\n    const model_info = ModelInformationDict[model_type as ModelType];\n    if (model_info?.url_detail && model_id) {\n      link = getDetailUrl(model_type as ModelType, model_id);\n    } else if (model_info?.url_overview) {\n      link = model_info.url_overview;\n    }\n  }\n\n  return (\n    <Paper p='xs' shadow='xs'>\n      <Group justify='space-between' wrap='nowrap'>\n        <Tooltip\n          label={notification.message}\n          position='bottom-end'\n          hidden={!notification.message}\n        >\n          <Stack gap={2}>\n            <Anchor\n              href={link ? `/${getBaseUrl()}${link}` : '#'}\n              underline='hover'\n              target='_blank'\n              onClick={(event: any) => {\n                if (link) {\n                  // Mark the notification as read\n                  onRead();\n                }\n\n                if (link.startsWith('/')) {\n                  navigateToLink(link, navigate, event);\n                }\n              }}\n            >\n              <Text size='sm'>{notification.name}</Text>\n            </Anchor>\n            <Text size='xs'>{notification.age_human}</Text>\n          </Stack>\n        </Tooltip>\n        <Tooltip label={t`Mark as read`} position='bottom-end'>\n          <ActionIcon variant='transparent' onClick={onRead}>\n            <IconBellCheck />\n          </ActionIcon>\n        </Tooltip>\n      </Group>\n    </Paper>\n  );\n}\n\n/**\n * Construct a notification drawer.\n */\nexport function NotificationDrawer({\n  opened,\n  onClose\n}: Readonly<{\n  opened: boolean;\n  onClose: () => void;\n}>) {\n  const { isLoggedIn } = useUserState();\n\n  const navigate = useNavigate();\n\n  const notificationQuery = useQuery({\n    enabled: opened && isLoggedIn(),\n    queryKey: ['notifications', opened],\n    queryFn: async () =>\n      api\n        .get(apiUrl(ApiEndpoints.notifications_list), {\n          params: {\n            read: false,\n            limit: 10,\n            ordering: '-creation'\n          }\n        })\n        .then((response) => response.data),\n    refetchOnMount: false\n  });\n\n  const hasNotifications: boolean = useMemo(() => {\n    return (notificationQuery.data?.results?.length ?? 0) > 0;\n  }, [notificationQuery.data]);\n\n  const markAllAsRead = useCallback(() => {\n    api\n      .get(apiUrl(ApiEndpoints.notifications_readall), {\n        params: {\n          read: false\n        }\n      })\n      .catch((_error) => {})\n      .then((_response) => {\n        notificationQuery.refetch();\n      });\n  }, []);\n\n  const markAsRead = useCallback((notification: any) => {\n    api\n      .patch(apiUrl(ApiEndpoints.notifications_list, notification.pk), {\n        read: true\n      })\n      .then(() => {\n        notificationQuery.refetch();\n      })\n      .catch(() => {\n        notificationQuery.refetch();\n      });\n  }, []);\n\n  return (\n    <Drawer\n      opened={opened}\n      size='md'\n      position='right'\n      onClose={onClose}\n      withCloseButton={false}\n      styles={{\n        header: {\n          width: '100%'\n        },\n        title: {\n          width: '100%'\n        }\n      }}\n      title={\n        <Group justify='space-between' wrap='nowrap'>\n          <StylishText size='lg'>{t`Notifications`}</StylishText>\n          <Group justify='end' wrap='nowrap'>\n            <Tooltip label={t`Mark all as read`}>\n              <ActionIcon\n                variant='transparent'\n                onClick={() => {\n                  markAllAsRead();\n                }}\n              >\n                <IconBellCheck />\n              </ActionIcon>\n            </Tooltip>\n            <Tooltip label={t`View all notifications`}>\n              <ActionIcon\n                onClick={(event: any) => {\n                  onClose();\n                  navigateToLink('/notifications/unread', navigate, event);\n                }}\n                variant='transparent'\n              >\n                <IconArrowRight />\n              </ActionIcon>\n            </Tooltip>\n          </Group>\n        </Group>\n      }\n    >\n      <Boundary label='NotificationDrawer'>\n        <Stack gap='xs'>\n          <Divider />\n          {!notificationQuery.isFetching &&\n            !notificationQuery.isLoading &&\n            !notificationQuery.isError &&\n            !hasNotifications && (\n              <Alert color='green' icon={<IconCircleCheck />}>\n                <Text size='sm'>{t`You have no unread notifications.`}</Text>\n              </Alert>\n            )}\n          {hasNotifications &&\n            notificationQuery.data?.results?.map((notification: any) => (\n              <NotificationEntry\n                key={`notification-${notification.pk}`}\n                notification={notification}\n                onRead={() => markAsRead(notification)}\n              />\n            ))}\n          {notificationQuery.isFetching && (\n            <Center>\n              <Loader size='sm' />\n            </Center>\n          )}\n          {notificationQuery.isError && (\n            <Alert\n              color='red'\n              title={t`Error`}\n              icon={<IconExclamationCircle />}\n            >\n              <Text size='sm'>{t`Error loading notifications.`}</Text>\n            </Alert>\n          )}\n        </Stack>\n      </Boundary>\n    </Drawer>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Trans } from '@lingui/react/macro';\nimport {\n  Accordion,\n  ActionIcon,\n  Alert,\n  Anchor,\n  Center,\n  Checkbox,\n  Drawer,\n  Group,\n  Loader,\n  Menu,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Tooltip\n} from '@mantine/core';\nimport { useDebouncedValue } from '@mantine/hooks';\nimport {\n  IconAlertCircle,\n  IconBackspace,\n  IconExclamationCircle,\n  IconRefresh,\n  IconSearch,\n  IconSettings,\n  IconTableExport,\n  IconX\n} from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { type NavigateFunction, useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelInformationDict } from '@lib/enums/ModelInformation';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport { cancelEvent } from '@lib/functions/Events';\nimport { eventModified, navigateToLink } from '@lib/functions/Navigation';\nimport { showNotification } from '@mantine/notifications';\nimport { api } from '../../App';\nimport { useUserSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { RenderInstance } from '../render/Instance';\nimport { getModelInfo } from '../render/ModelType';\n\n// Define type for handling individual search queries\ntype SearchQuery = {\n  model: ModelType;\n  searchKey?: string;\n  title?: string;\n  overviewUrl?: string;\n  enabled: boolean;\n  parameters: any;\n  results?: any;\n};\n\n/*\n * Render the results for a single search query\n */\nfunction QueryResultGroup({\n  searchText,\n  query,\n  navigate,\n  onClose,\n  onRemove,\n  onResultClick\n}: Readonly<{\n  searchText: string;\n  query: SearchQuery;\n  navigate: NavigateFunction;\n  onClose: () => void;\n  onRemove: (query: ModelType) => void;\n  onResultClick: (query: ModelType, pk: number, event: any) => void;\n}>) {\n  const modelInfo = useMemo(() => getModelInfo(query.model), [query.model]);\n\n  const overviewUrl: string | undefined = useMemo(() => {\n    // Query has a custom overview URL\n    if (query.overviewUrl) {\n      return query.overviewUrl;\n    }\n\n    return modelInfo.url_overview;\n  }, [query, modelInfo]);\n\n  // Callback function to view all results for a given query\n  const viewResults = useCallback(\n    (event: any) => {\n      cancelEvent(event);\n\n      if (overviewUrl) {\n        const url = `${overviewUrl}?search=${searchText}`;\n\n        // Close drawer if opening in the same tab\n        if (!eventModified(event)) {\n          onClose();\n        }\n\n        navigateToLink(url, navigate, event);\n      } else {\n        showNotification({\n          title: t`No Overview Available`,\n          message: t`No overview available for this model type`,\n          color: 'red',\n          icon: <IconExclamationCircle />\n        });\n      }\n    },\n    [overviewUrl, searchText]\n  );\n\n  if (query.results.count == 0) {\n    return null;\n  }\n\n  return (\n    <Accordion.Item key={query.model} value={query.model}>\n      <Accordion.Control component='div'>\n        <Group justify='space-between'>\n          <Group justify='left' gap={5} wrap='nowrap'>\n            <Tooltip label={t`View all results`} position='top-start'>\n              <ActionIcon\n                size='sm'\n                variant='transparent'\n                radius='xs'\n                aria-label={`view-all-results-${query.searchKey ?? query.model}`}\n                disabled={!overviewUrl}\n                onClick={viewResults}\n              >\n                <IconTableExport />\n              </ActionIcon>\n            </Tooltip>\n            <Text size='lg'>{query.title ?? modelInfo.label_multiple}</Text>\n            <Text size='sm' style={{ fontStyle: 'italic' }}>\n              {' '}\n              - {query.results.count} <Trans>results</Trans>\n            </Text>\n          </Group>\n          <Group justify='right' wrap='nowrap'>\n            <Tooltip label={t`Remove search group`} position='top-end'>\n              <ActionIcon\n                size='sm'\n                color='red'\n                variant='transparent'\n                radius='xs'\n                aria-label={`remove-search-group-${query.model}`}\n                onClick={() => onRemove(query.model)}\n              >\n                <IconX />\n              </ActionIcon>\n            </Tooltip>\n            <Space />\n          </Group>\n        </Group>\n      </Accordion.Control>\n      <Accordion.Panel>\n        <Stack aria-label={`search-group-results-${query.model}`}>\n          {query.results.results.map((result: any) => (\n            <Anchor\n              underline='never'\n              onClick={(event: any) =>\n                onResultClick(query.model, result.pk, event)\n              }\n              key={`result-${query.model}-${result.pk}`}\n            >\n              <RenderInstance instance={result} model={query.model} />\n            </Anchor>\n          ))}\n        </Stack>\n      </Accordion.Panel>\n    </Accordion.Item>\n  );\n}\n\n/**\n * Construct a drawer which provides quick-search functionality\n * @param\n */\nexport function SearchDrawer({\n  opened,\n  onClose\n}: Readonly<{\n  opened: boolean;\n  onClose: () => void;\n}>) {\n  const [value, setValue] = useState<string>('');\n  const [searchText] = useDebouncedValue(value, 500);\n\n  const user = useUserState();\n  const userSettings = useUserSettingsState();\n\n  const [searchRegex, setSearchRegex] = useState<boolean>(false);\n  const [searchWhole, setSearchWhole] = useState<boolean>(false);\n  const [searchNotes, setSearchNotes] = useState<boolean>(false);\n\n  useEffect(() => {\n    setSearchRegex(userSettings.isSet('SEARCH_REGEX', false));\n    setSearchWhole(userSettings.isSet('SEARCH_WHOLE', false));\n    setSearchNotes(userSettings.isSet('SEARCH_NOTES', false));\n  }, [\n    userSettings.isSet('SEARCH_REGEX', false),\n    userSettings.isSet('SEARCH_WHOLE', false),\n    userSettings.isSet('SEARCH_NOTES', false)\n  ]);\n\n  // Build out search queries based on user permissions and preferences\n  const searchQueryList: SearchQuery[] = useMemo(() => {\n    return [\n      {\n        model: ModelType.part,\n        parameters: {\n          active: userSettings.isSet('SEARCH_HIDE_INACTIVE_PARTS')\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_PARTS')\n      },\n      {\n        model: ModelType.supplierpart,\n        parameters: {\n          part_detail: true,\n          supplier_detail: true,\n          manufacturer_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SUPPLIER_PARTS')\n      },\n      {\n        model: ModelType.manufacturerpart,\n        parameters: {\n          part_detail: true,\n          supplier_detail: true,\n          manufacturer_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_MANUFACTURER_PARTS')\n      },\n      {\n        model: ModelType.partcategory,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.part_category) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_CATEGORIES')\n      },\n      {\n        model: ModelType.stockitem,\n        parameters: {\n          part_detail: true,\n          location_detail: true,\n          in_stock: userSettings.isSet('SEARCH_PREVIEW_HIDE_UNAVAILABLE_STOCK')\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.stock) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_STOCK')\n      },\n      {\n        model: ModelType.stocklocation,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.stock_location) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_LOCATIONS')\n      },\n      {\n        model: ModelType.build,\n        parameters: {\n          part_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.build) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_BUILD_ORDERS')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/purchasing/index/suppliers',\n        searchKey: 'supplier',\n        title: t`Suppliers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/purchasing/index/manufacturers',\n        searchKey: 'manufacturer',\n        title: t`Manufacturers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/sales/index/customers',\n        searchKey: 'customer',\n        title: t`Customers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.purchaseorder,\n        parameters: {\n          supplier_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_PURCHASE_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_PURCHASE_ORDERS')\n      },\n      {\n        model: ModelType.salesorder,\n        parameters: {\n          customer_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_SALES_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SALES_ORDERS')\n      },\n      {\n        model: ModelType.salesordershipment,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SALES_ORDER_SHIPMENTS')\n      },\n      {\n        model: ModelType.returnorder,\n        parameters: {\n          customer_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_RETURN_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.return_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_RETURN_ORDERS')\n      }\n    ];\n  }, [user, userSettings]);\n\n  // Construct a list of search queries based on user permissions\n  const searchQueries: SearchQuery[] = useMemo(() => {\n    return searchQueryList.filter((q) => q.enabled);\n  }, [searchQueryList]);\n\n  // Re-fetch data whenever the search term is updated\n  useEffect(() => {\n    searchQuery.refetch();\n  }, [searchText]);\n\n  // Function for performing the actual search query\n  const performSearch = async () => {\n    // Return empty result set if no search text\n    if (!searchText) {\n      return [];\n    }\n\n    const params: any = {\n      offset: 0,\n      limit: userSettings.getSetting('SEARCH_PREVIEW_RESULTS', '10'),\n      search: searchText,\n      search_regex: searchRegex,\n      search_whole: searchWhole,\n      search_notes: searchNotes\n    };\n\n    // Add in custom query parameters\n    searchQueries.forEach((query) => {\n      const key = query.searchKey || query.model;\n      params[key] = query.parameters;\n    });\n\n    return api\n      .post(apiUrl(ApiEndpoints.api_search), params)\n      .then((response) => response.data);\n  };\n\n  // Search query manager\n  const searchQuery = useQuery({\n    queryKey: ['search', searchText, searchRegex, searchWhole, searchNotes],\n    queryFn: performSearch\n  });\n\n  // A list of queries which return valid results\n  const [queryResults, setQueryResults] = useState<SearchQuery[]>([]);\n\n  // Update query results whenever the search results change\n  useEffect(() => {\n    if (searchQuery.data) {\n      let queries = searchQueries.filter(\n        (query) => (query.searchKey ?? query.model) in searchQuery.data\n      );\n\n      for (const key in searchQuery.data) {\n        const query = queries.find((q) => (q.searchKey ?? q.model) == key);\n        if (query) {\n          query.results = searchQuery.data[key];\n        }\n      }\n\n      // Filter for results with non-zero count\n      queries = queries.filter((query) => query.results.count > 0);\n\n      setQueryResults(queries);\n    } else {\n      setQueryResults([]);\n    }\n  }, [searchQuery.data]);\n\n  // Callback to remove a set of results from the list\n  function removeResults(query: ModelType) {\n    setQueryResults(queryResults.filter((q) => q.model != query));\n  }\n\n  // Callback when the drawer is closed\n  function closeDrawer() {\n    setValue('');\n    onClose();\n  }\n\n  const navigate = useNavigate();\n\n  // Callback when one of the search results is clicked\n  function onResultClick(query: ModelType, pk: number, event: any) {\n    const targetModel = ModelInformationDict[query];\n    if (targetModel.url_detail == undefined) {\n      return;\n    }\n\n    if (eventModified(event)) {\n      // Keep the drawer open in this condition\n    } else {\n      closeDrawer();\n    }\n\n    const url = targetModel.url_detail.replace(':pk', pk.toString());\n    navigateToLink(url, navigate, event);\n  }\n\n  return (\n    <Drawer\n      opened={opened}\n      size='xl'\n      onClose={closeDrawer}\n      position='right'\n      withCloseButton={false}\n      styles={{ header: { width: '100%' }, title: { width: '100%' } }}\n      title={\n        <Group justify='space-between' gap={1} wrap='nowrap'>\n          <TextInput\n            aria-label='global-search-input'\n            placeholder={t`Enter search text`}\n            value={value}\n            onChange={(event) => setValue(event.currentTarget.value)}\n            leftSection={<IconSearch size='0.8rem' />}\n            rightSection={\n              value && (\n                <IconBackspace color='red' onClick={() => setValue('')} />\n              )\n            }\n            styles={{ root: { width: '100%' } }}\n          />\n          <Tooltip label={t`Refresh search results`} position='bottom-end'>\n            <ActionIcon\n              size='lg'\n              variant='transparent'\n              onClick={() => searchQuery.refetch()}\n            >\n              <IconRefresh />\n            </ActionIcon>\n          </Tooltip>\n          <Menu position='bottom-end'>\n            <Menu.Target>\n              <Tooltip label={t`Search Options`} position='bottom-end'>\n                <ActionIcon size='lg' variant='transparent'>\n                  <IconSettings />\n                </ActionIcon>\n              </Tooltip>\n            </Menu.Target>\n            <Menu.Dropdown>\n              <Menu.Label>{t`Search Options`}</Menu.Label>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Whole word search`}\n                  checked={searchWhole}\n                  onChange={(event) =>\n                    setSearchWhole(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Regex search`}\n                  checked={searchRegex}\n                  onChange={(event) =>\n                    setSearchRegex(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Notes search`}\n                  checked={searchNotes}\n                  onChange={(event) =>\n                    setSearchNotes(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n            </Menu.Dropdown>\n          </Menu>\n        </Group>\n      }\n    >\n      <Boundary label='SearchDrawer'>\n        {searchQuery.isFetching && (\n          <Center>\n            <Loader />\n          </Center>\n        )}\n        {!searchQuery.isFetching && !searchQuery.isError && (\n          <Stack gap='md'>\n            <Accordion\n              multiple\n              defaultValue={searchQueries.map((q) => q.model)}\n            >\n              {queryResults.map((query, idx) => (\n                <QueryResultGroup\n                  key={idx}\n                  searchText={searchText}\n                  query={query}\n                  navigate={navigate}\n                  onClose={closeDrawer}\n                  onRemove={(query) => removeResults(query)}\n                  onResultClick={(query, pk, event) =>\n                    onResultClick(query, pk, event)\n                  }\n                />\n              ))}\n            </Accordion>\n          </Stack>\n        )}\n        {searchQuery.isError && (\n          <Alert\n            color='red'\n            radius='sm'\n            variant='light'\n            title={t`Error`}\n            icon={<IconAlertCircle size='1rem' />}\n          >\n            <Trans>An error occurred during search query</Trans>\n          </Alert>\n        )}\n        {searchText &&\n          !searchQuery.isFetching &&\n          !searchQuery.isError &&\n          queryResults.length == 0 && (\n            <Alert\n              color='blue'\n              radius='sm'\n              variant='light'\n              title={t`No Results`}\n              icon={<IconSearch size='1rem' />}\n            >\n              <Trans>No results available for search query</Trans>\n            </Alert>\n          )}\n      </Boundary>\n    </Drawer>\n  );\n}\n","import {\n  ActionIcon,\n  Container,\n  Group,\n  Indicator,\n  Tabs,\n  Text,\n  Tooltip,\n  UnstyledButton\n} from '@mantine/core';\nimport {\n  useDisclosure,\n  useDocumentVisibility,\n  useHotkeys\n} from '@mantine/hooks';\nimport { IconBell, IconSearch } from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { type ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useMatch, useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getBaseUrl } from '@lib/functions/Navigation';\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport { t } from '@lingui/core/macro';\nimport { useShallow } from 'zustand/react/shallow';\nimport { api } from '../../App';\nimport type { NavigationUIFeature } from '../../components/plugins/PluginUIFeatureTypes';\nimport { getNavTabs } from '../../defaults/links';\nimport { generateUrl } from '../../functions/urls';\nimport { usePluginUIFeature } from '../../hooks/UsePluginUIFeature';\nimport * as classes from '../../main.css';\nimport { useLocalState } from '../../states/LocalState';\nimport { useServerApiState } from '../../states/ServerApiState';\nimport {\n  useGlobalSettingsState,\n  useUserSettingsState\n} from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { ScanButton } from '../buttons/ScanButton';\nimport { SpotlightButton } from '../buttons/SpotlightButton';\nimport { Alerts } from './Alerts';\nimport { MainMenu } from './MainMenu';\nimport { NavHoverMenu } from './NavHoverMenu';\nimport { NavigationDrawer } from './NavigationDrawer';\nimport { NotificationDrawer } from './NotificationDrawer';\nimport { SearchDrawer } from './SearchDrawer';\n\nexport function Header() {\n  const [setNavigationOpen, navigationOpen] = useLocalState(\n    useShallow((state) => [state.setNavigationOpen, state.navigationOpen])\n  );\n  const [server] = useServerApiState(useShallow((state) => [state.server]));\n  const [navDrawerOpened, { open: openNavDrawer, close: closeNavDrawer }] =\n    useDisclosure(navigationOpen);\n\n  const [\n    searchDrawerOpened,\n    { open: openSearchDrawer, close: closeSearchDrawer }\n  ] = useDisclosure(false);\n\n  useHotkeys([\n    [\n      '/',\n      () => {\n        openSearchDrawer();\n      }\n    ],\n    [\n      'mod+/',\n      () => {\n        openSearchDrawer();\n      }\n    ]\n  ]);\n\n  const [\n    notificationDrawerOpened,\n    { open: openNotificationDrawer, close: closeNotificationDrawer }\n  ] = useDisclosure(false);\n\n  const { isLoggedIn } = useUserState();\n  const [notificationCount, setNotificationCount] = useState<number>(0);\n  const globalSettings = useGlobalSettingsState();\n  const userSettings = useUserSettingsState();\n\n  const navbar_message = useMemo(() => {\n    return server.customize?.navbar_message;\n  }, [server.customize]);\n\n  const visibility = useDocumentVisibility();\n\n  // Fetch number of notifications for the current user\n  const notifications = useQuery({\n    queryKey: ['notification-count', visibility],\n    enabled: isLoggedIn() && visibility === 'visible',\n    queryFn: async () => {\n      if (!isLoggedIn() || visibility != 'visible') {\n        return null;\n      }\n\n      return api\n        .get(apiUrl(ApiEndpoints.notifications_list), {\n          params: {\n            read: false,\n            limit: 1\n          }\n        })\n        .then((response: any) => {\n          setNotificationCount(response?.data?.count ?? 0);\n          return response.data ?? null;\n        });\n    },\n    // Refetch every minute, *if* the tab is visible\n    refetchInterval: 60 * 1000,\n    refetchOnMount: true\n  });\n\n  // Sync Navigation Drawer state with zustand\n  useEffect(() => {\n    if (navigationOpen === navDrawerOpened) return;\n    setNavigationOpen(navDrawerOpened);\n  }, [navDrawerOpened]);\n\n  useEffect(() => {\n    if (navigationOpen === navDrawerOpened) return;\n    if (navigationOpen) openNavDrawer();\n    else closeNavDrawer();\n  }, [navigationOpen]);\n\n  const headerStyle: any = useMemo(() => {\n    const sticky: boolean = userSettings.isSet('STICKY_HEADER', true);\n\n    if (sticky) {\n      return {\n        position: 'sticky',\n        top: 0\n      };\n    } else {\n      return {};\n    }\n  }, [userSettings]);\n\n  return (\n    <div className={classes.layoutHeader} style={headerStyle}>\n      <SearchDrawer opened={searchDrawerOpened} onClose={closeSearchDrawer} />\n      <NavigationDrawer opened={navDrawerOpened} close={closeNavDrawer} />\n      <NotificationDrawer\n        opened={notificationDrawerOpened}\n        onClose={() => {\n          notifications.refetch();\n          closeNotificationDrawer();\n        }}\n      />\n      <Container className={classes.layoutHeaderSection} size='100%'>\n        <Group justify='space-between'>\n          <Group>\n            <NavHoverMenu openDrawer={openNavDrawer} />\n            <NavTabs />\n          </Group>\n          {navbar_message && (\n            <Text>\n              {/* biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation> */}\n              <span dangerouslySetInnerHTML={{ __html: navbar_message }} />\n            </Text>\n          )}\n          <Group>\n            <Tooltip position='bottom-end' label={t`Search`}>\n              <ActionIcon\n                onClick={openSearchDrawer}\n                variant='transparent'\n                aria-label='open-search'\n              >\n                <IconSearch />\n              </ActionIcon>\n            </Tooltip>\n            {userSettings.isSet('SHOW_SPOTLIGHT') && <SpotlightButton />}\n            {globalSettings.isSet('BARCODE_ENABLE') && <ScanButton />}\n            <Indicator\n              radius='lg'\n              size='18'\n              label={notificationCount}\n              color='red'\n              disabled={notificationCount <= 0}\n              inline\n            >\n              <Tooltip position='bottom-end' label={t`Notifications`}>\n                <ActionIcon\n                  onClick={openNotificationDrawer}\n                  variant='transparent'\n                  aria-label='open-notifications'\n                >\n                  <IconBell />\n                </ActionIcon>\n              </Tooltip>\n            </Indicator>\n            <Alerts />\n            <MainMenu />\n          </Group>\n        </Group>\n      </Container>\n    </div>\n  );\n}\n\nfunction NavTabs() {\n  const user = useUserState();\n  const navigate = useNavigate();\n  const match = useMatch(':tabName/*');\n  const tabValue = match?.params.tabName;\n  const navTabs = getNavTabs(user);\n  const userSettings = useUserSettingsState();\n\n  const withIcons: boolean = useMemo(\n    () => userSettings.isSet('ICONS_IN_NAVBAR', false),\n    [userSettings]\n  );\n\n  const extraNavs = usePluginUIFeature<NavigationUIFeature>({\n    featureType: 'navigation',\n    context: {}\n  });\n\n  const tabs: ReactNode[] = useMemo(() => {\n    const _tabs: ReactNode[] = [];\n\n    const mainNavTabs = getNavTabs(user);\n\n    // static content\n    mainNavTabs.forEach((tab) => {\n      if (tab.role && !user.hasViewRole(tab.role)) {\n        return;\n      }\n\n      _tabs.push(\n        <Tabs.Tab\n          value={tab.name}\n          key={tab.name}\n          leftSection={\n            withIcons &&\n            tab.icon && (\n              <ActionIcon variant='transparent'>{tab.icon}</ActionIcon>\n            )\n          }\n          onClick={(event: any) =>\n            navigateToLink(`/${tab.name}`, navigate, event)\n          }\n        >\n          <UnstyledButton\n            component={'a'}\n            href={generateUrl(`/${getBaseUrl()}/${tab.name}`)}\n          >\n            {tab.title}\n          </UnstyledButton>\n        </Tabs.Tab>\n      );\n    });\n    // dynamic content\n    extraNavs.forEach((nav) => {\n      _tabs.push(\n        <Tabs.Tab\n          value={nav.options.title}\n          key={nav.options.key}\n          onClick={(event: any) =>\n            navigateToLink(nav.options.options.url, navigate, event)\n          }\n        >\n          {nav.options.title}\n        </Tabs.Tab>\n      );\n    });\n\n    return _tabs;\n  }, [extraNavs, navTabs, user, withIcons]);\n\n  return (\n    <Tabs\n      defaultValue='home'\n      classNames={{\n        root: classes.tabs,\n        list: classes.tabsList,\n        tab: classes.tab\n      }}\n      value={tabValue}\n    >\n      <Tabs.List>{tabs.map((tab) => tab)}</Tabs.List>\n    </Tabs>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Container, Flex, Space } from '@mantine/core';\nimport { Spotlight, createSpotlight } from '@mantine/spotlight';\nimport { IconSearch } from '@tabler/icons-react';\nimport { type JSX, useEffect, useState } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nimport { getActions } from '../../defaults/actions';\nimport * as classes from '../../main.css';\nimport { useUserSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\n\nexport const ProtectedRoute = ({ children }: { children: JSX.Element }) => {\n  const location = useLocation();\n  const { isLoggedIn } = useUserState();\n\n  if (!isLoggedIn()) {\n    return (\n      <Navigate\n        to='/logged-in'\n        state={{\n          redirectUrl: location.pathname,\n          queryParams: location.search,\n          anchor: location.hash\n        }}\n      />\n    );\n  }\n\n  return children;\n};\n\nexport const [firstStore, firstSpotlight] = createSpotlight();\n\nexport default function LayoutComponent() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const userSettings = useUserSettingsState();\n\n  const defaultActions = getActions(navigate);\n  const [actions, setActions] = useState(defaultActions);\n  const [customActions, setCustomActions] = useState<boolean>(false);\n\n  function actionsAreChanging(change: []) {\n    if (change.length > defaultActions.length) setCustomActions(true);\n    setActions(change);\n  }\n  // firstStore.subscribe(actionsAreChanging);\n\n  // clear additional actions on location change\n  useEffect(() => {\n    if (customActions) {\n      setActions(defaultActions);\n      setCustomActions(false);\n    }\n  }, [location]);\n\n  return (\n    <ProtectedRoute>\n      <Flex direction='column' mih='100vh'>\n        <Header />\n        <Container className={classes.layoutContent} size='100%'>\n          <Boundary label={'layout'}>\n            <Outlet />\n          </Boundary>\n          {/* </ErrorBoundary> */}\n        </Container>\n        <Space h='xl' />\n        <Footer />\n        {userSettings.isSet('SHOW_SPOTLIGHT') && (\n          <Spotlight\n            actions={actions}\n            store={firstStore}\n            highlightQuery\n            searchProps={{\n              leftSection: <IconSearch size='1.2rem' />,\n              placeholder: t`Search...`\n            }}\n            shortcut={['mod + K']}\n            nothingFound={t`Nothing found...`}\n          />\n        )}\n      </Flex>\n    </ProtectedRoute>\n  );\n}\n"],"names":["createSpotlightStore","createStore","useSpotlight","store","useStore","updateSpotlightStateAction","update","state","openSpotlightAction","closeSpotlightAction","toggleSpotlightAction","setSelectedAction","index","setListId","id","findElementByQuerySelector","selector","root","element","children","i","child","shadowElement","nestedElement","selectAction","actionsList","selected","actions","nextIndex","selectedIndex","clamp","_a","_b","selectNextAction","selectPreviousAction","triggerSelectedAction","registerAction","setQuery","query","clearSpotlightState","clearQuery","spotlightActions","createSpotlight","spotlightStore","spotlight","openSpotlight","closeSpotlight","toggleSpotlight","isActionsGroup","item","_item","getKeywords","keywords","keyword","getFlatActions","data","acc","action","flatActionsToGroups","groups","result","defaultSpotlightFilter","_query","priorityMatrix","limitActions","limit","count","groupActions","SpotlightProvider","useSpotlightContext","createSafeContext","defaultProps","SpotlightAction","factory","_props","ref","props","useProps","className","style","classNames","styles","description","label","leftSection","rightSection","dimmedSections","highlightQuery","highlightColor","closeSpotlightOnTrigger","onClick","onMouseDown","vars","others","ctx","stylesApi","labelNode","jsx","Highlight","UnstyledButton","event","jsxs","Fragment","Box","classes","SpotlightActionsGroup","SpotlightActionsList","generatedId","useId","listId","useEffect","ScrollArea","SpotlightEmpty","SpotlightFooter","getHotkeys","hotkeys","open","hotkey","getDefaultZIndex","SpotlightRoot","unstyled","onQueryChange","transitionProps","clearQueryOnClose","shortcut","tagsToIgnore","triggerOnContentEditable","disabled","onSpotlightOpen","onSpotlightClose","forceOpened","closeOnActionTrigger","maxHeight","scrollable","theme","useMantineTheme","opened","storeQuery","q","getStyles","useStyles","useHotkeys","useDidUpdate","Modal","resolveClassNames","resolveStyles","rem","SpotlightSearch","onKeyDown","onChange","value","inputStyles","isComposing","setIsComposing","useState","handleKeyDown","Input","Spotlight","searchProps","filter","nothingFound","useUncontrolled","filteredActions","items","actionData","openQrModal","navigate","openContextModal","modal","innerProps","getActions","setNavigationOpen","useLocalState","useShallow","user","useUserState","_i18n","_","IconLink","location","href","docLinks","faq","aboutInvenTree","serverInfo","licenseInfo","IconPointer","IconBarcode","is_staff","push","Footer","ScanButton","close","useDisclosure","Tooltip","ActionIcon","IconQrcode","BarcodeScanDialog","SpotlightButton","firstSpotlight","IconCommand","MainMenu","useNavigate","username","colorScheme","toggleColorScheme","useMantineColorScheme","Menu","Group","Text","lineHeight","Skeleton","radiusDefault","IconChevronDown","_Trans","IconUserCog","Link","IconSettings","IconUserBolt","IconSun","IconMoonStars","colors","yellow","blue","IconLogout","doLogout","InvenTreeIcon","forwardRef","NavLink","InvenTreeLogo","NavHoverMenu","openDrawer","MenuLinks","title","links","beforeClick","visibleLinks","useMemo","hidden","length","Stack","Divider","StylishText","SimpleGrid","base","map","link","external","Anchor","icon","size","plugins","NavigationDrawer","Drawer","body","navigationDrawer","DrawerContent","closeFunc","globalSettings","useGlobalSettingsState","scrollHeight","setScrollHeight","useRef","height","useViewportSize","useInstanceName","current","menuItemsNavigate","hasViewPermission","ModelType","part","stockitem","hasViewRole","UserRoles","build","purchase_order","sales_order","menuItemsAction","isSet","menuItemsSettings","isStaff","menuItemsDocumentation","DocumentationLinks","menuItemsAbout","AboutLinks","Flex","Space","Container","NotificationEntry","notification","onRead","target","model_type","model_id","model_info","ModelInformationDict","url_detail","getDetailUrl","url_overview","Paper","message","getBaseUrl","startsWith","name","age_human","IconBellCheck","NotificationDrawer","onClose","isLoggedIn","notificationQuery","useQuery","enabled","queryKey","queryFn","api","get","apiUrl","ApiEndpoints","notifications_list","params","read","ordering","then","response","refetchOnMount","hasNotifications","results","markAllAsRead","useCallback","notifications_readall","catch","_error","_response","refetch","markAsRead","patch","pk","header","width","navigateToLink","IconArrowRight","Boundary","isFetching","isLoading","isError","Alert","IconCircleCheck","Center","Loader","IconExclamationCircle","QueryResultGroup","searchText","onRemove","onResultClick","modelInfo","getModelInfo","model","overviewUrl","viewResults","cancelEvent","url","eventModified","showNotification","color","Accordion","searchKey","IconTableExport","label_multiple","fontStyle","IconX","RenderInstance","SearchDrawer","setValue","useDebouncedValue","userSettings","useUserSettingsState","searchRegex","setSearchRegex","searchWhole","setSearchWhole","searchNotes","setSearchNotes","searchQueryList","parameters","active","undefined","supplierpart","part_detail","supplier_detail","manufacturer_detail","manufacturerpart","partcategory","part_category","location_detail","in_stock","stock","stocklocation","stock_location","company","purchaseorder","outstanding","salesorder","customer_detail","salesordershipment","returnorder","return_order","searchQueries","searchQuery","offset","getSetting","search","search_regex","search_whole","search_notes","forEach","key","post","api_search","performSearch","queryResults","setQueryResults","queries","find","removeResults","closeDrawer","targetModel","replace","toString","TextInput","currentTarget","IconSearch","IconBackspace","IconRefresh","Checkbox","checked","idx","IconAlertCircle","Header","navigationOpen","server","useServerApiState","navDrawerOpened","openNavDrawer","closeNavDrawer","searchDrawerOpened","openSearchDrawer","closeSearchDrawer","notificationDrawerOpened","openNotificationDrawer","closeNotificationDrawer","notificationCount","setNotificationCount","navbar_message","customize","visibility","useDocumentVisibility","notifications","refetchInterval","headerStyle","position","top","NavTabs","__html","Indicator","IconBell","Alerts","match","useMatch","tabValue","tabName","navTabs","getNavTabs","withIcons","extraNavs","usePluginUIFeature","featureType","context","tabs","_tabs","mainNavTabs","tab","role","Tabs","generateUrl","nav","options","list","ProtectedRoute","useLocation","Navigate","redirectUrl","pathname","queryParams","anchor","hash","firstStore","LayoutComponent","defaultActions","setActions","customActions","setCustomActions","Outlet","placeholder"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}
