{"version":3,"file":"PurchaseOrderTable-Ba7yiiQb.js","sources":["../../../../../../frontend/src/tables/purchasing/PurchaseOrderTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useMemo } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport { formatCurrency } from '../../defaults/formatters';\nimport { usePurchaseOrderFields } from '../../forms/PurchaseOrderForms';\nimport { useCreateApiFormModal } from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport {\n  CompanyColumn,\n  CompletionDateColumn,\n  CreatedByColumn,\n  CreationDateColumn,\n  DescriptionColumn,\n  LineItemsProgressColumn,\n  ProjectCodeColumn,\n  ReferenceColumn,\n  ResponsibleColumn,\n  StartDateColumn,\n  StatusColumn,\n  TargetDateColumn\n} from '../ColumnRenderers';\nimport {\n  AssignedToMeFilter,\n  CompletedAfterFilter,\n  CompletedBeforeFilter,\n  CreatedAfterFilter,\n  CreatedBeforeFilter,\n  CreatedByFilter,\n  HasProjectCodeFilter,\n  MaxDateFilter,\n  MinDateFilter,\n  OrderStatusFilter,\n  OutstandingFilter,\n  OverdueFilter,\n  ProjectCodeFilter,\n  ResponsibleFilter,\n  StartDateAfterFilter,\n  StartDateBeforeFilter,\n  TargetDateAfterFilter,\n  TargetDateBeforeFilter\n} from '../Filter';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Display a table of purchase orders\n */\nexport function PurchaseOrderTable({\n  supplierId,\n  supplierPartId,\n  externalBuildId\n}: Readonly<{\n  supplierId?: number;\n  supplierPartId?: number;\n  externalBuildId?: number;\n}>) {\n  const table = useTable('purchase-order');\n  const user = useUserState();\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    return [\n      OrderStatusFilter({ model: ModelType.purchaseorder }),\n      OutstandingFilter(),\n      OverdueFilter(),\n      AssignedToMeFilter(),\n      MinDateFilter(),\n      MaxDateFilter(),\n      CreatedBeforeFilter(),\n      CreatedAfterFilter(),\n      TargetDateBeforeFilter(),\n      TargetDateAfterFilter(),\n      StartDateBeforeFilter(),\n      StartDateAfterFilter(),\n      {\n        name: 'has_target_date',\n        type: 'boolean',\n        label: t`Has Target Date`,\n        description: t`Show orders with a target date`\n      },\n      {\n        name: 'has_start_date',\n        type: 'boolean',\n        label: t`Has Start Date`,\n        description: t`Show orders with a start date`\n      },\n      CompletedBeforeFilter(),\n      CompletedAfterFilter(),\n      ProjectCodeFilter(),\n      HasProjectCodeFilter(),\n      ResponsibleFilter(),\n      CreatedByFilter()\n    ];\n  }, []);\n\n  const tableColumns = useMemo(() => {\n    return [\n      ReferenceColumn({\n        switchable: false\n      }),\n      DescriptionColumn({}),\n      {\n        accessor: 'supplier__name',\n        title: t`Supplier`,\n        sortable: true,\n        render: (record: any) => (\n          <CompanyColumn company={record.supplier_detail} />\n        )\n      },\n      {\n        accessor: 'supplier_reference'\n      },\n      LineItemsProgressColumn(),\n      StatusColumn({ model: ModelType.purchaseorder }),\n      ProjectCodeColumn({\n        defaultVisible: false\n      }),\n      CreationDateColumn({\n        defaultVisible: false\n      }),\n      CreatedByColumn({\n        defaultVisible: false\n      }),\n      StartDateColumn({\n        defaultVisible: false\n      }),\n      TargetDateColumn({}),\n      CompletionDateColumn({\n        accessor: 'complete_date'\n      }),\n      {\n        accessor: 'total_price',\n        title: t`Total Price`,\n        sortable: true,\n        render: (record: any) => {\n          return formatCurrency(record.total_price, {\n            currency: record.order_currency || record.supplier_detail?.currency\n          });\n        }\n      },\n      ResponsibleColumn({})\n    ];\n  }, []);\n\n  const purchaseOrderFields = usePurchaseOrderFields({});\n\n  const newPurchaseOrder = useCreateApiFormModal({\n    url: ApiEndpoints.purchase_order_list,\n    title: t`Add Purchase Order`,\n    fields: purchaseOrderFields,\n    initialData: {\n      supplier: supplierId\n    },\n    follow: true,\n    modelType: ModelType.purchaseorder\n  });\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-purchase-order'\n        tooltip={t`Add Purchase Order`}\n        onClick={() => newPurchaseOrder.open()}\n        hidden={!user.hasAddRole(UserRoles.purchase_order)}\n      />\n    ];\n  }, [user]);\n\n  return (\n    <>\n      {newPurchaseOrder.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.purchase_order_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          params: {\n            supplier_detail: true,\n            supplier: supplierId,\n            supplier_part: supplierPartId,\n            external_build: externalBuildId\n          },\n          tableFilters: tableFilters,\n          tableActions: tableActions,\n          modelType: ModelType.purchaseorder,\n          enableSelection: true,\n          enableDownload: true,\n          enableReports: true\n        }}\n      />\n    </>\n  );\n}\n"],"names":["PurchaseOrderTable","supplierId","supplierPartId","externalBuildId","table","useTable","user","useUserState","tableFilters","useMemo","OrderStatusFilter","model","ModelType","purchaseorder","OutstandingFilter","OverdueFilter","AssignedToMeFilter","MinDateFilter","MaxDateFilter","CreatedBeforeFilter","CreatedAfterFilter","TargetDateBeforeFilter","TargetDateAfterFilter","StartDateBeforeFilter","StartDateAfterFilter","name","type","label","_i18n","_","id","description","CompletedBeforeFilter","CompletedAfterFilter","ProjectCodeFilter","HasProjectCodeFilter","ResponsibleFilter","CreatedByFilter","tableColumns","ReferenceColumn","switchable","DescriptionColumn","accessor","title","sortable","render","record","CompanyColumn","supplier_detail","LineItemsProgressColumn","StatusColumn","ProjectCodeColumn","defaultVisible","CreationDateColumn","CreatedByColumn","StartDateColumn","TargetDateColumn","CompletionDateColumn","formatCurrency","total_price","currency","order_currency","ResponsibleColumn","purchaseOrderFields","usePurchaseOrderFields","newPurchaseOrder","useCreateApiFormModal","url","ApiEndpoints","purchase_order_list","fields","initialData","supplier","follow","modelType","tableActions","jsx","AddItemButton","open","hasAddRole","UserRoles","purchase_order","modal","InvenTreeTable","apiUrl","params","supplier_part","external_build","enableSelection","enableDownload","enableReports"],"mappings":"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"}
