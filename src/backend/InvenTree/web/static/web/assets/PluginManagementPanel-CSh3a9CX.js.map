{"version":3,"mappings":";oWAaA,MAAMA,EAAkBC,EACtBC,OAAK,IAAMC,EAAA,WAAO,+BAA2C,gGAAC,CAChE,EAEMC,EAAmBH,EACvBC,OAAK,IAAMC,EAAA,WAAO,gCAA4C,sEAAC,CACjE,EAEA,SAAwBE,GAAwB,CAC9C,MAAMC,EAAiBC,EACrBC,KAAsBC,EAAMC,OAAOC,eAAe,CACpD,EAEMC,EAAOC,EAAa,EAE1B,cACGC,EACE,YAACR,GACAS,MAACC,EACC,aAAOC,EAAA,CAAAC,GAAA,QAAkB,CAAE,EAC3B,KAAMH,EAAA,IAACI,GAAc,GACrB,MAAM,OAEN,SAAAJ,EAAA,IAAAE,EAAA,CAAAC,GAAA,SAEQ,CACV,GAGFE,OAACC,EAAU,cAAa,aACtB,UAAAD,EAAA,KAACC,EAAU,KAAV,CAAe,MAAM,aACpB,UAAAN,MAACM,EAAU,QAAV,CACC,eAACC,EAAY,MAAK,KAAKC,SAAAC,IAAC,CAAAN,GAAA,WAAW,CACrC,SACCG,EAAU,MAAV,CACC,SAAAN,MAACf,IAAe,CAClB,IACF,EAECoB,EAAA,KAAAC,EAAU,KAAV,CAAe,MAAM,iBACpB,UAAAN,MAACM,EAAU,QAAV,CACC,eAACC,EAAY,MAAK,KAAKC,SAAAC,IAAC,CAAAN,GAAA,WAAmB,CAC7C,SACCG,EAAU,MAAV,CACC,SAACN,MAAAU,EAAA,CACC,KAAM,CACJ,0BACA,wBACA,2BACA,qBACA,4BACA,qBACA,uBACA,oBACA,qBAAqB,EACrB,CAEN,IACF,EACCb,EAAKc,YACJ,GAAAN,OAACC,EAAU,KAAV,CAAe,MAAM,cACpB,UAAAN,MAACM,EAAU,QAAV,CACC,eAACC,EAAY,MAAK,KAAKC,SAAAC,IAAC,CAAAN,GAAA,WAAiB,CAC3C,SACCG,EAAU,MAAV,CACC,SAAAN,MAACX,IAAgB,CACnB,GACF,GAEJ,IACF,CAEJ","names":["PluginListTable","Loadable","lazy","__vitePreload","PluginErrorTable","PluginManagementPanel","pluginsEnabled","useServerApiState","useShallow","state","server","plugins_enabled","user","useUserState","Stack","jsx","Alert","_Trans","id","IconInfoCircle","jsxs","Accordion","StylishText","_i18n","_","GlobalSettingList","isSuperuser"],"ignoreList":[],"sources":["../../../../../../frontend/src/pages/Index/Settings/AdminCenter/PluginManagementPanel.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Trans } from '@lingui/react/macro';\nimport { Accordion, Alert, Stack } from '@mantine/core';\nimport { IconInfoCircle } from '@tabler/icons-react';\nimport { lazy } from 'react';\n\nimport { useShallow } from 'zustand/react/shallow';\nimport { StylishText } from '../../../../components/items/StylishText';\nimport { GlobalSettingList } from '../../../../components/settings/SettingList';\nimport { Loadable } from '../../../../functions/loading';\nimport { useServerApiState } from '../../../../states/ServerApiState';\nimport { useUserState } from '../../../../states/UserState';\n\nconst PluginListTable = Loadable(\n  lazy(() => import('../../../../tables/plugin/PluginListTable'))\n);\n\nconst PluginErrorTable = Loadable(\n  lazy(() => import('../../../../tables/plugin/PluginErrorTable'))\n);\n\nexport default function PluginManagementPanel() {\n  const pluginsEnabled = useServerApiState(\n    useShallow((state) => state.server.plugins_enabled)\n  );\n\n  const user = useUserState();\n\n  return (\n    <Stack>\n      {!pluginsEnabled && (\n        <Alert\n          title={<Trans>Info</Trans>}\n          icon={<IconInfoCircle />}\n          color='blue'\n        >\n          <Trans>\n            External plugins are not enabled for this InvenTree installation.\n          </Trans>\n        </Alert>\n      )}\n\n      <Accordion defaultValue='pluginlist'>\n        <Accordion.Item value='pluginlist'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`Plugins`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <PluginListTable />\n          </Accordion.Panel>\n        </Accordion.Item>\n\n        <Accordion.Item value='pluginsettings'>\n          <Accordion.Control>\n            <StylishText size='lg'>{t`Plugin Settings`}</StylishText>\n          </Accordion.Control>\n          <Accordion.Panel>\n            <GlobalSettingList\n              keys={[\n                'ENABLE_PLUGINS_SCHEDULE',\n                'ENABLE_PLUGINS_EVENTS',\n                'ENABLE_PLUGINS_INTERFACE',\n                'ENABLE_PLUGINS_URL',\n                'ENABLE_PLUGINS_NAVIGATION',\n                'ENABLE_PLUGINS_APP',\n                'ENABLE_PLUGINS_MAILS',\n                'PLUGIN_ON_STARTUP',\n                'PLUGIN_UPDATE_CHECK'\n              ]}\n            />\n          </Accordion.Panel>\n        </Accordion.Item>\n        {user.isSuperuser() && (\n          <Accordion.Item value='pluginerror'>\n            <Accordion.Control>\n              <StylishText size='lg'>{t`Plugin Errors`}</StylishText>\n            </Accordion.Control>\n            <Accordion.Panel>\n              <PluginErrorTable />\n            </Accordion.Panel>\n          </Accordion.Item>\n        )}\n      </Accordion>\n    </Stack>\n  );\n}\n"],"file":"assets/PluginManagementPanel-CSh3a9CX.js"}
